#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lipsync_AL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lipsync_AL.BP_Lipsync_AL_C.ChangeBlendShape
// 0x0040 (0x0040 - 0x0000)
struct BP_Lipsync_AL_C_ChangeBlendShape final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lipsync_AL_C_ChangeBlendShape) == 0x000008, "Wrong alignment on BP_Lipsync_AL_C_ChangeBlendShape");
static_assert(sizeof(BP_Lipsync_AL_C_ChangeBlendShape) == 0x000040, "Wrong size on BP_Lipsync_AL_C_ChangeBlendShape");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, Param_Name) == 0x000000, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, Value) == 0x000010, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::Value' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, K2Node_DynamicCast_AsTs_Base_Character) == 0x000030, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ChangeBlendShape, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Lipsync_AL_C_ChangeBlendShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Lipsync_AL.BP_Lipsync_AL_C.PlayLipsync
// 0x0040 (0x0040 - 0x0000)
struct BP_Lipsync_AL_C_PlayLipsync final
{
public:
	int32                                         Id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E50[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetLipsyncData_data;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lipsync_AL_C_PlayLipsync) == 0x000008, "Wrong alignment on BP_Lipsync_AL_C_PlayLipsync");
static_assert(sizeof(BP_Lipsync_AL_C_PlayLipsync) == 0x000040, "Wrong size on BP_Lipsync_AL_C_PlayLipsync");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, Id) == 0x000000, "Member 'BP_Lipsync_AL_C_PlayLipsync::Id' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, CallFunc_GetLipsyncData_data) == 0x000008, "Member 'BP_Lipsync_AL_C_PlayLipsync::CallFunc_GetLipsyncData_data' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_Lipsync_AL_C_PlayLipsync::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_Lipsync_AL_C_PlayLipsync::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Lipsync_AL_C_PlayLipsync::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_PlayLipsync, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BP_Lipsync_AL_C_PlayLipsync::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_Lipsync_AL.BP_Lipsync_AL_C.DoLipsync
// 0x0038 (0x0038 - 0x0000)
struct BP_Lipsync_AL_C_DoLipsync final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E51[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFallbackStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E52[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Lipsync_AL_C_DoLipsync) == 0x000008, "Wrong alignment on BP_Lipsync_AL_C_DoLipsync");
static_assert(sizeof(BP_Lipsync_AL_C_DoLipsync) == 0x000038, "Wrong size on BP_Lipsync_AL_C_DoLipsync");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_GetDataTableRowFromName_OutRow) == 0x000024, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000025, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000026, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_DoLipsync, CallFunc_ParseIntoArray_ReturnValue) == 0x000028, "Member 'BP_Lipsync_AL_C_DoLipsync::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");

// Function BP_Lipsync_AL.BP_Lipsync_AL_C.ShowFrameData
// 0x0050 (0x0050 - 0x0000)
struct BP_Lipsync_AL_C_ShowFrameData final
{
public:
	TArray<class FString>                         Datas;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ___int_Array_Index_Variable;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E53[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFallbackStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lipsync_AL_C_ShowFrameData) == 0x000008, "Wrong alignment on BP_Lipsync_AL_C_ShowFrameData");
static_assert(sizeof(BP_Lipsync_AL_C_ShowFrameData) == 0x000050, "Wrong size on BP_Lipsync_AL_C_ShowFrameData");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, Datas) == 0x000000, "Member 'BP_Lipsync_AL_C_ShowFrameData::Datas' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, ___int_Array_Index_Variable) == 0x000010, "Member 'BP_Lipsync_AL_C_ShowFrameData::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, ___int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Lipsync_AL_C_ShowFrameData::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000018, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000049, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_ShowFrameData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00004A, "Member 'BP_Lipsync_AL_C_ShowFrameData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_Lipsync_AL.BP_Lipsync_AL_C.GetLipsyncData
// 0x0010 (0x0010 - 0x0000)
struct BP_Lipsync_AL_C_GetLipsyncData final
{
public:
	int32                                         Id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E54[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Data;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lipsync_AL_C_GetLipsyncData) == 0x000008, "Wrong alignment on BP_Lipsync_AL_C_GetLipsyncData");
static_assert(sizeof(BP_Lipsync_AL_C_GetLipsyncData) == 0x000010, "Wrong size on BP_Lipsync_AL_C_GetLipsyncData");
static_assert(offsetof(BP_Lipsync_AL_C_GetLipsyncData, Id) == 0x000000, "Member 'BP_Lipsync_AL_C_GetLipsyncData::Id' has a wrong offset!");
static_assert(offsetof(BP_Lipsync_AL_C_GetLipsyncData, Data) == 0x000008, "Member 'BP_Lipsync_AL_C_GetLipsyncData::Data' has a wrong offset!");

}

