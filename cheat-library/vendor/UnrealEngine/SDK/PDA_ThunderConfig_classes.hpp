#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_ThunderConfig

#include "Basic.hpp"

#include "KuroCurve_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_ThunderConfig.PDA_ThunderConfig_C
// 0x0280 (0x02B8 - 0x0038)
class UPDA_ThunderConfig_C final : public UPrimaryDataAsset
{
public:
	float                                         ____;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____Min;                                           // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____Max;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C6[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         ThunderNiagara;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKuroCurveFloat                        OI____;                                            // 0x0050(0x0090)(Edit, BlueprintVisible)
	struct FKuroCurveFloat                        OIJ___;                                            // 0x00E0(0x0090)(Edit, BlueprintVisible)
	struct FKuroCurveFloat                        _______;                                           // 0x0170(0x0090)(Edit, BlueprintVisible)
	float                                         __J_;                                              // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mn_p;                                              // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         ____Min_0;                                         // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         ____Max_0;                                         // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FKuroCurveFloat                        _B__I____;                                         // 0x0210(0x0090)(Edit, BlueprintVisible)
	class UAkAudioEvent*                          AudioEvent_2D;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TwoDEventStopTransition;                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C7[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AudioEvent_Lightening;                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_ThunderConfig_C">();
	}
	static class UPDA_ThunderConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_ThunderConfig_C>();
	}
};
static_assert(alignof(UPDA_ThunderConfig_C) == 0x000008, "Wrong alignment on UPDA_ThunderConfig_C");
static_assert(sizeof(UPDA_ThunderConfig_C) == 0x0002B8, "Wrong size on UPDA_ThunderConfig_C");
static_assert(offsetof(UPDA_ThunderConfig_C, ____) == 0x000038, "Member 'UPDA_ThunderConfig_C::____' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, ____Min) == 0x00003C, "Member 'UPDA_ThunderConfig_C::____Min' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, ____Max) == 0x000040, "Member 'UPDA_ThunderConfig_C::____Max' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, ThunderNiagara) == 0x000048, "Member 'UPDA_ThunderConfig_C::ThunderNiagara' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, OI____) == 0x000050, "Member 'UPDA_ThunderConfig_C::OI____' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, OIJ___) == 0x0000E0, "Member 'UPDA_ThunderConfig_C::OIJ___' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, _______) == 0x000170, "Member 'UPDA_ThunderConfig_C::_______' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, __J_) == 0x000200, "Member 'UPDA_ThunderConfig_C::__J_' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, Mn_p) == 0x000204, "Member 'UPDA_ThunderConfig_C::Mn_p' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, ____Min_0) == 0x000208, "Member 'UPDA_ThunderConfig_C::____Min_0' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, ____Max_0) == 0x00020C, "Member 'UPDA_ThunderConfig_C::____Max_0' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, _B__I____) == 0x000210, "Member 'UPDA_ThunderConfig_C::_B__I____' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, AudioEvent_2D) == 0x0002A0, "Member 'UPDA_ThunderConfig_C::AudioEvent_2D' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, TwoDEventStopTransition) == 0x0002A8, "Member 'UPDA_ThunderConfig_C::TwoDEventStopTransition' has a wrong offset!");
static_assert(offsetof(UPDA_ThunderConfig_C, AudioEvent_Lightening) == 0x0002B0, "Member 'UPDA_ThunderConfig_C::AudioEvent_Lightening' has a wrong offset!");

}

