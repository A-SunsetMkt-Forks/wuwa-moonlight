#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CloudCards

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CloudCards.BP_CloudCards_C
// 0x0108 (0x03B0 - 0x02A8)
class ABP_CloudCards_C final : public AActor
{
public:
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InitRot;                                           // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Dist;                                              // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistScale;                                         // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleXY;                                           // 0x02D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CloudCardMeshComps;                                // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         InitAngle;                                         // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleSpace;                                        // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomSeed;                                        // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2839[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CloudMIDs;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RotSpeed;                                          // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_283A[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CloudAngles;                                       // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInterface*                     CloudMat;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     CloudTextures;                                     // 0x0338(0x0010)(Edit, BlueprintVisible)
	float                                         CloudLit;                                          // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AtmoLightScale;                                    // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GammaExp;                                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Contrast;                                          // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Brightness;                                        // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Translucency;                                      // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyBlend;                                          // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disortion;                                         // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LitOffset;                                         // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HorizonFalloff;                                    // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HorizonOffset;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DisortionSpeed;                                    // 0x0374(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DarkColor;                                         // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor;                                         // 0x039C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void UpdateCloudPos(float TimeOfDay, const struct FVector& SunDir);
	void SetupCloudMesh(class UStaticMeshComponent* MeshComp, class UTexture2D* CloudTex, float RotAngle, int32 RandSeed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CloudCards_C">();
	}
	static class ABP_CloudCards_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CloudCards_C>();
	}
};
static_assert(alignof(ABP_CloudCards_C) == 0x000008, "Wrong alignment on ABP_CloudCards_C");
static_assert(sizeof(ABP_CloudCards_C) == 0x0003B0, "Wrong size on ABP_CloudCards_C");
static_assert(offsetof(ABP_CloudCards_C, Billboard) == 0x0002A8, "Member 'ABP_CloudCards_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Root) == 0x0002B0, "Member 'ABP_CloudCards_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Plane) == 0x0002B8, "Member 'ABP_CloudCards_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, InitRot) == 0x0002C0, "Member 'ABP_CloudCards_C::InitRot' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Dist) == 0x0002CC, "Member 'ABP_CloudCards_C::Dist' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, DistScale) == 0x0002D0, "Member 'ABP_CloudCards_C::DistScale' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, ScaleXY) == 0x0002D4, "Member 'ABP_CloudCards_C::ScaleXY' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Height) == 0x0002DC, "Member 'ABP_CloudCards_C::Height' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudCardMeshComps) == 0x0002E0, "Member 'ABP_CloudCards_C::CloudCardMeshComps' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, InitAngle) == 0x0002F0, "Member 'ABP_CloudCards_C::InitAngle' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, AngleSpace) == 0x0002F4, "Member 'ABP_CloudCards_C::AngleSpace' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, RandomSeed) == 0x0002F8, "Member 'ABP_CloudCards_C::RandomSeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudMIDs) == 0x000300, "Member 'ABP_CloudCards_C::CloudMIDs' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, RotSpeed) == 0x000310, "Member 'ABP_CloudCards_C::RotSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, TimerHandle) == 0x000318, "Member 'ABP_CloudCards_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudAngles) == 0x000320, "Member 'ABP_CloudCards_C::CloudAngles' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudMat) == 0x000330, "Member 'ABP_CloudCards_C::CloudMat' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudTextures) == 0x000338, "Member 'ABP_CloudCards_C::CloudTextures' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, CloudLit) == 0x000348, "Member 'ABP_CloudCards_C::CloudLit' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, AtmoLightScale) == 0x00034C, "Member 'ABP_CloudCards_C::AtmoLightScale' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, GammaExp) == 0x000350, "Member 'ABP_CloudCards_C::GammaExp' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Contrast) == 0x000354, "Member 'ABP_CloudCards_C::Contrast' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Brightness) == 0x000358, "Member 'ABP_CloudCards_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Translucency) == 0x00035C, "Member 'ABP_CloudCards_C::Translucency' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, SkyBlend) == 0x000360, "Member 'ABP_CloudCards_C::SkyBlend' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, Disortion) == 0x000364, "Member 'ABP_CloudCards_C::Disortion' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, LitOffset) == 0x000368, "Member 'ABP_CloudCards_C::LitOffset' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, HorizonFalloff) == 0x00036C, "Member 'ABP_CloudCards_C::HorizonFalloff' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, HorizonOffset) == 0x000370, "Member 'ABP_CloudCards_C::HorizonOffset' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, DisortionSpeed) == 0x000374, "Member 'ABP_CloudCards_C::DisortionSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, LightColor) == 0x00037C, "Member 'ABP_CloudCards_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, DarkColor) == 0x00038C, "Member 'ABP_CloudCards_C::DarkColor' has a wrong offset!");
static_assert(offsetof(ABP_CloudCards_C, BaseColor) == 0x00039C, "Member 'ABP_CloudCards_C::BaseColor' has a wrong offset!");

}

