#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Common_limitmove

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_Common_limitmove.GA_Common_limitmove_C.ExecuteUbergraph_GA_Common_limitmove
// 0x01B8 (0x01B8 - 0x0000)
struct GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2946[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0014)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0064(0x0014)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           CallFunc___________1;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2947[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2948[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_____GA______________;                     // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00C0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2949[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc___________2;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294A[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc______________;                            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294B[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc___________5;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294C[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x011C(0x0014)(ZeroConstructor, NoDestructor)
	class ATsBaseCharacter_C*                     CallFunc___________6;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyDown_ReturnValue;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294D[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x013C(0x0014)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IGameplayTaskOwnerInterface> CallFunc_TaskWaitDelay_TaskOwner_CastInput;        // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UGameplayTask_WaitDelay*                CallFunc_TaskWaitDelay_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________7;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________1;                          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294E[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__________SpeedRatio;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyDown_ReturnValue_1;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_294F[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2950[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove) == 0x000008, "Wrong alignment on GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove");
static_assert(sizeof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove) == 0x0001B8, "Wrong size on GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, EntryPoint) == 0x000000, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc__________) == 0x000008, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_4) == 0x000064, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________1) == 0x000078, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_WaitDelay_ReturnValue) == 0x000080, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000A8, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_____GA______________) == 0x0000B0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_____GA______________' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000C0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_Conv_NameToString_ReturnValue) == 0x0000D8, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________2) == 0x0000E8, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________3) == 0x0000F8, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________4) == 0x000100, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc______________) == 0x000108, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________5) == 0x000110, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________5' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_6) == 0x00011C, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________6) == 0x000130, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________6' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsKeyDown_ReturnValue) == 0x000138, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_CreateDelegate_OutputDelegate_7) == 0x00013C, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_TaskWaitDelay_TaskOwner_CastInput) == 0x000150, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_TaskWaitDelay_TaskOwner_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_TaskWaitDelay_ReturnValue) == 0x000160, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_TaskWaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc___________7) == 0x000168, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc___________7' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_______________1) == 0x000170, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_______________1' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsValid_ReturnValue_3) == 0x000171, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc__________SpeedRatio) == 0x000174, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc__________SpeedRatio' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000178, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsKeyDown_ReturnValue_1) == 0x000180, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_BooleanOR_ReturnValue) == 0x000181, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_IsValid_ReturnValue_4) == 0x000182, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000188, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_DynamicCast_AsTs_Base_Character) == 0x000190, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, CallFunc_Conv_IntToString_ReturnValue) == 0x0001A0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove, K2Node_Event_bWasCancelled) == 0x0001B0, "Member 'GA_Common_limitmove_C_ExecuteUbergraph_GA_Common_limitmove::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_Common_limitmove.GA_Common_limitmove_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Common_limitmove_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Common_limitmove_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Common_limitmove_C_K2_OnEndAbility");
static_assert(sizeof(GA_Common_limitmove_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Common_limitmove_C_K2_OnEndAbility");
static_assert(offsetof(GA_Common_limitmove_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Common_limitmove_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

