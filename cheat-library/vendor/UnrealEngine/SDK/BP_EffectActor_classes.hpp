#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EffectActor

#include "Basic.hpp"

#include "SEffectVectorParameter_structs.hpp"
#include "Engine_structs.hpp"
#include "SEffectColorParameter_structs.hpp"
#include "EEffectType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SEffectFloatParameter_structs.hpp"
#include "EEffectPlay_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EffectActor.BP_EffectActor_C
// 0x00A8 (0x0360 - 0x02B8)
class ABP_EffectActor_C final : public AKuroSceneEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        EffectData;                                        // 0x02C8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DebugPrintOnConstruction;                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EditorTickWithoutSelected;                         // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E4[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EffectComponent;                                   // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEffectPlay                                   PlayType;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEffectType                                   EffectType;                                        // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstTick;                                         // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          __yH_p;                                            // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         __Iq_____;                                         // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSEffectFloatParameter>         _7_pFloat;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSEffectColorParameter>         _7_pColor;                                         // 0x0308(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSEffectVectorParameter>        _7_pVector;                                        // 0x0318(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSEffectFloatParameter>         P__pFloat;                                         // 0x0328(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSEffectColorParameter>         P__pColor;                                         // 0x0338(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSEffectFloatParameter>         P__pFloat_Temp;                                    // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UsedInBossFight;                                   // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldBePlaying;                                   // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OpenVisibilityOptimize;                            // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_EffectActor(int32 EntryPoint);
	void OnReceiveShowSceneEffectActor();
	void OnReceiveHideSceneEffectActor();
	void DoHiddenInGame(bool bValue);
	void SetHandle(int32 Handle);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RemoveHandle();
	void EditorTick(float DeltaSeconds);
	void UserConstructionScript();
	void Refresh();
	void CalculateLifeTime();
	void IsEditor(bool* Param_IsEditor);
	bool Stop(const class FString& Reason, bool Immediately);
	void Play(const class FString& Reason);
	void PlayEffect();
	void StopEffect();
	void GetHandle(int32* Handle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EffectActor_C">();
	}
	static class ABP_EffectActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EffectActor_C>();
	}
};
static_assert(alignof(ABP_EffectActor_C) == 0x000008, "Wrong alignment on ABP_EffectActor_C");
static_assert(sizeof(ABP_EffectActor_C) == 0x000360, "Wrong size on ABP_EffectActor_C");
static_assert(offsetof(ABP_EffectActor_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_EffectActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_EffectActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, EffectData) == 0x0002C8, "Member 'ABP_EffectActor_C::EffectData' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, DebugPrintOnConstruction) == 0x0002E8, "Member 'ABP_EffectActor_C::DebugPrintOnConstruction' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, EditorTickWithoutSelected) == 0x0002E9, "Member 'ABP_EffectActor_C::EditorTickWithoutSelected' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, EffectComponent) == 0x0002EC, "Member 'ABP_EffectActor_C::EffectComponent' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, PlayType) == 0x0002F0, "Member 'ABP_EffectActor_C::PlayType' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, EffectType) == 0x0002F1, "Member 'ABP_EffectActor_C::EffectType' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, FirstTick) == 0x0002F2, "Member 'ABP_EffectActor_C::FirstTick' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, __yH_p) == 0x0002F3, "Member 'ABP_EffectActor_C::__yH_p' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, __Iq_____) == 0x0002F4, "Member 'ABP_EffectActor_C::__Iq_____' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, _7_pFloat) == 0x0002F8, "Member 'ABP_EffectActor_C::_7_pFloat' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, _7_pColor) == 0x000308, "Member 'ABP_EffectActor_C::_7_pColor' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, _7_pVector) == 0x000318, "Member 'ABP_EffectActor_C::_7_pVector' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, P__pFloat) == 0x000328, "Member 'ABP_EffectActor_C::P__pFloat' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, P__pColor) == 0x000338, "Member 'ABP_EffectActor_C::P__pColor' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, P__pFloat_Temp) == 0x000348, "Member 'ABP_EffectActor_C::P__pFloat_Temp' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, UsedInBossFight) == 0x000358, "Member 'ABP_EffectActor_C::UsedInBossFight' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, ShouldBePlaying) == 0x000359, "Member 'ABP_EffectActor_C::ShouldBePlaying' has a wrong offset!");
static_assert(offsetof(ABP_EffectActor_C, OpenVisibilityOptimize) == 0x00035A, "Member 'ABP_EffectActor_C::OpenVisibilityOptimize' has a wrong offset!");

}

