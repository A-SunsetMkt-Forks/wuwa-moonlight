#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeatherController

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WeatherController.BP_WeatherController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WeatherController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WeatherController_C_ReceiveTick");
static_assert(sizeof(BP_WeatherController_C_ReceiveTick) == 0x000004, "Wrong size on BP_WeatherController_C_ReceiveTick");
static_assert(offsetof(BP_WeatherController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WeatherController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WeatherController.BP_WeatherController_C.EditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WeatherController_C_EditorTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherController_C_EditorTick) == 0x000004, "Wrong alignment on BP_WeatherController_C_EditorTick");
static_assert(sizeof(BP_WeatherController_C_EditorTick) == 0x000004, "Wrong size on BP_WeatherController_C_EditorTick");
static_assert(offsetof(BP_WeatherController_C_EditorTick, DeltaSeconds) == 0x000000, "Member 'BP_WeatherController_C_EditorTick::DeltaSeconds' has a wrong offset!");

// Function BP_WeatherController.BP_WeatherController_C.ExecuteUbergraph_BP_WeatherController
// 0x0058 (0x0058 - 0x0000)
struct BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_290E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LensDropletManager_C*               K2Node_DynamicCast_AsBP_Lens_Droplet_Manager;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddWeatherDataType_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_290F[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetWeatherDataRef_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2910[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeatherData_C*                      K2Node_DynamicCast_AsBP_Weather_Data;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2911[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetGlobalGIActor_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalGI_C*                         K2Node_DynamicCast_AsBP_Global_GI;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController) == 0x000008, "Wrong alignment on BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController");
static_assert(sizeof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController) == 0x000058, "Wrong size on BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, EntryPoint) == 0x000000, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_Event_DeltaSeconds_1) == 0x000004, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_AsBP_Lens_Droplet_Manager) == 0x000010, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_AsBP_Lens_Droplet_Manager' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001A, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, ___bool_Has_Been_Initd_Variable) == 0x00001B, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_AddWeatherDataType_ReturnValue) == 0x00001C, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_AddWeatherDataType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, ___bool_IsClosed_Variable) == 0x00001D, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_GetWeatherDataRef_ReturnValue) == 0x000020, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_GetWeatherDataRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_AsBP_Weather_Data) == 0x000030, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_AsBP_Weather_Data' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_GetGlobalGIActor_ReturnValue) == 0x000040, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_GetGlobalGIActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_AsBP_Global_GI) == 0x000048, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_AsBP_Global_GI' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_WeatherController_C_ExecuteUbergraph_BP_WeatherController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

