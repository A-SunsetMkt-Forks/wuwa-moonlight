#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_VM_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AIC_VM_Common.AIC_VM_Common_C.ExecuteUbergraph_AIC_VM_Common
// 0x00B8 (0x00B8 - 0x0000)
struct AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B82[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CreatureInterface_C> CallFunc_GetEntityId_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetEntityId_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bContent)>                K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetSummonerEntityId_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bContent)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bContent)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0014)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseVision_C*                       K2Node_DynamicCast_AsBP_Base_Vision;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bContent_2;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B83[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UKuroBooleanEventBinder*                CallFunc___AIC___ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UKuroBooleanEventBinder*                CallFunc___AIC___ReturnValue_1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bContent_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B84[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKuroBooleanEventBinder*                CallFunc___AIC___ReturnValue_2;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bContent;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common) == 0x000008, "Wrong alignment on AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common");
static_assert(sizeof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common) == 0x0000B8, "Wrong size on AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, EntryPoint) == 0x000000, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc_GetEntityId_self_CastInput) == 0x000008, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc_GetEntityId_self_CastInput' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc_GetEntityId_ReturnValue) == 0x000018, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc_GetEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc_GetSummonerEntityId_ReturnValue) == 0x000030, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc_GetSummonerEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_DynamicCast_AsBP_Base_Vision) == 0x000078, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_DynamicCast_AsBP_Base_Vision' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CustomEvent_bContent_2) == 0x000081, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CustomEvent_bContent_2' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000088, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc___AIC___ReturnValue) == 0x000090, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc___AIC___ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc___AIC___ReturnValue_1) == 0x000098, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc___AIC___ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CustomEvent_bContent_1) == 0x0000A0, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CustomEvent_bContent_1' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, CallFunc___AIC___ReturnValue_2) == 0x0000A8, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::CallFunc___AIC___ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common, K2Node_CustomEvent_bContent) == 0x0000B0, "Member 'AIC_VM_Common_C_ExecuteUbergraph_AIC_VM_Common::K2Node_CustomEvent_bContent' has a wrong offset!");

// Function AIC_VM_Common.AIC_VM_Common_C.M«P9
// 0x0001 (0x0001 - 0x0000)
struct AIC_VM_Common_C_M_P9 final
{
public:
	bool                                          bContent;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_VM_Common_C_M_P9) == 0x000001, "Wrong alignment on AIC_VM_Common_C_M_P9");
static_assert(sizeof(AIC_VM_Common_C_M_P9) == 0x000001, "Wrong size on AIC_VM_Common_C_M_P9");
static_assert(offsetof(AIC_VM_Common_C_M_P9, bContent) == 0x000000, "Member 'AIC_VM_Common_C_M_P9::bContent' has a wrong offset!");

// Function AIC_VM_Common.AIC_VM_Common_C.Öˆšö
// 0x0001 (0x0001 - 0x0000)
struct AIC_VM_Common_C_____ final
{
public:
	bool                                          bContent;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_VM_Common_C_____) == 0x000001, "Wrong alignment on AIC_VM_Common_C_____");
static_assert(sizeof(AIC_VM_Common_C_____) == 0x000001, "Wrong size on AIC_VM_Common_C_____");
static_assert(offsetof(AIC_VM_Common_C_____, bContent) == 0x000000, "Member 'AIC_VM_Common_C_____::bContent' has a wrong offset!");

// Function AIC_VM_Common.AIC_VM_Common_C.û }h
// 0x0001 (0x0001 - 0x0000)
struct AIC_VM_Common_C_____h_ final
{
public:
	bool                                          bContent;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_VM_Common_C_____h_) == 0x000001, "Wrong alignment on AIC_VM_Common_C_____h_");
static_assert(sizeof(AIC_VM_Common_C_____h_) == 0x000001, "Wrong size on AIC_VM_Common_C_____h_");
static_assert(offsetof(AIC_VM_Common_C_____h_, bContent) == 0x000000, "Member 'AIC_VM_Common_C_____h_::bContent' has a wrong offset!");

}

