#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Jianxin

#include "Basic.hpp"

#include "SInputCommand_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û	
// 0x0898 (0x0898 - 0x0000)
struct BP_Input_Jianxin_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0040(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D83[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D84[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0084(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x00A8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D85[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x00D0(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D86[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0100(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D87[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0250(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D88[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x027C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D89[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D8A[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x02B0(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D8B[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D8C[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D8D[0x1];                                     // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02F8(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D8E[0x3];                                     // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x0444(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D8F[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D90[0x3];                                     // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x0474(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D91[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D92[0x3];                                     // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D93[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x04C0(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x060A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x060B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x060D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D94[0x2];                                     // 0x060E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x0610(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0626(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_4;        // 0x0627(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_6;                 // 0x0628(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0640(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D95[0x4];                                     // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0650(0x0020)()
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_3;      // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_3;          // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_7;                 // 0x0688(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D96[0x4];                                     // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_3;               // 0x06B0(0x0148)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x07F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_3;                // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x080D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x080E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x080F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D97[0x3];                                     // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_3;                            // 0x0814(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3; // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x082A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x082B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x082C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x082D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x082E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x082F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D98[0x7];                                     // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0838(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D99[0x7];                                     // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0850(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9A[0x4];                                     // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0868(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9B[0x6];                                     // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x000898, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000040, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000060, "Member 'BP_Input_Jianxin_C_____::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000074, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Variable) == 0x000078, "Member 'BP_Input_Jianxin_C_____::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___bool_True_if_break_was_hit_Variable) == 0x00007C, "Member 'BP_Input_Jianxin_C_____::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00007D, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00007E, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x00007F, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000080, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000084, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x0000A8, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_1) == 0x0000D0, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000E4, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x0000F8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x0000FC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x000100, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000248, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000249, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00024A, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x00024B, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00024C, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000250, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000268, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Loop_Counter_Variable) == 0x000278, "Member 'BP_Input_Jianxin_C_____::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x00027C, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Less_IntInt_ReturnValue) == 0x000290, "Member 'BP_Input_Jianxin_C_____::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Add_IntInt_ReturnValue) == 0x000294, "Member 'BP_Input_Jianxin_C_____::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000298, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0002A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0002B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002D0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002D8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x0002E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x0002EC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F0, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0002F1, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x0002F2, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x0002F3, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x0002F4, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002F5, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x0002F6, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002F8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000440, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_4) == 0x000444, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000458, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000460, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_2) == 0x000470, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_5) == 0x000474, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x000488, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000490, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_2) == 0x0004A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x0004A4, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x0004A8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_2) == 0x0004B8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_2) == 0x0004C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000608, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_3) == 0x000609, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00060A, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00060B, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_3) == 0x00060C, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x00060D, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_2) == 0x000610, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_7) == 0x000624, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_8) == 0x000625, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000626, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_4) == 0x000627, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_6) == 0x000628, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Array_Index_Variable) == 0x00063C, "Member 'BP_Input_Jianxin_C_____::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Get_Item) == 0x000640, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000650, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_3) == 0x000670, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Variable_1) == 0x000680, "Member 'BP_Input_Jianxin_C_____::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_3) == 0x000684, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_7) == 0x000688, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0006A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_3) == 0x0006B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0007F8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_3) == 0x000808, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00080C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x00080D, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_4) == 0x00080E, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_4) == 0x00080F, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000810, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_3) == 0x000814, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3) == 0x000828, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_9) == 0x000829, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_10) == 0x00082A, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_11) == 0x00082B, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00082C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00082D, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00082E, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_5) == 0x00082F, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_12) == 0x000830, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000838, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000848, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeArray_Array) == 0x000850, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Get_Item_1) == 0x000860, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000868, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000878, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000879, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000880, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000890, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û	
// 0x0458 (0x0458 - 0x0000)
struct BP_Input_Jianxin_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9C[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9D[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0048(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9E[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9F[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0074(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0098(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA0[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA1[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00D8(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA2[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x022C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA3[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA4[0x5];                                     // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0260(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA5[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0298(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA6[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x03EC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0403(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc___________;                               // 0x0407(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA7[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA8[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA9[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x000458, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Jianxin_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x000030, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000044, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000048, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000070, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000071, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000074, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000098, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000D8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000220, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000224, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000225, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000226, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x000227, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000228, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x00022C, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000240, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000248, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000258, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000259, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x00025A, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000260, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x000280, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000288, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000298, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x0003E0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0003E4, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003E5, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x0003E6, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003E7, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_1) == 0x0003EC, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000400, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000401, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x000402, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000403, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000404, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000405, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x000406, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc___________) == 0x000407, "Member 'BP_Input_Jianxin_C_____::CallFunc___________' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x000408, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000410, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000420, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000428, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000438, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000440, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000450, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.ý1	
// 0x0610 (0x0610 - 0x0000)
struct BP_Input_Jianxin_C___1__ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DAA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAB[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAC[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A8(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x01F8(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x020C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0230(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAD[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0258(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAE[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAF[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0298(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB0[0x2];                                     // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x03EC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB1[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB2[0x3];                                     // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x041C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x0430(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB3[0x4];                                     // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB4[0x3];                                     // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x0470(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x05BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x05BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB5[0x2];                                     // 0x05C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB6[0x3];                                     // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB7[0x7];                                     // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x05F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C___1__) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C___1__");
static_assert(sizeof(BP_Input_Jianxin_C___1__) == 0x000610, "Wrong size on BP_Input_Jianxin_C___1__");
static_assert(offsetof(BP_Input_Jianxin_C___1__, Time) == 0x000000, "Member 'BP_Input_Jianxin_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc___1___ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand) == 0x000040, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000068, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000090, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue) == 0x0001F0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F5, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F6, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue) == 0x0001F7, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable_1) == 0x0001F8, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_2) == 0x00020C, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000220, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_3) == 0x000230, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000244, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000248, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000258, "Member 'BP_Input_Jianxin_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue_1) == 0x000278, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x00027C, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000280, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x000290, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue_1) == 0x000294, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000298, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0003E0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x0003E1, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003E2, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003E3, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003E4, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_1) == 0x0003E5, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_2) == 0x0003E6, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_3) == 0x0003E7, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x0003E8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_1) == 0x0003E9, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_4) == 0x0003EC, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_4) == 0x000400, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000408, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_5) == 0x000418, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable_2) == 0x00041C, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_5) == 0x000430, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000448, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x000458, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue_2) == 0x00045C, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x000460, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue_2) == 0x000470, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue_2) == 0x0005B8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x0005BC, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0005BD, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_2) == 0x0005BE, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue_2) == 0x0005BF, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0005C0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_6) == 0x0005C1, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_7) == 0x0005C2, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x0005C3, "Member 'BP_Input_Jianxin_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_8) == 0x0005C4, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0005C5, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0005C8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0005D8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0005D9, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x0005DA, "Member 'BP_Input_Jianxin_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_3) == 0x0005DB, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_9) == 0x0005DC, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0005E0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0005F0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0005F8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000608, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.'Û	
// 0x0240 (0x0240 - 0x0000)
struct BP_Input_Jianxin_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB8[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB9[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0058(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DBA[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBB[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0098(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBC[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x01F0(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBD[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBE[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x000240, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000040, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x000044, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000058, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000080, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x000084, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000088, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x0001E0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0001E4, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E5, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x0001E6, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x0001E7, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0001F0, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000210, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000214, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000215, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000216, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x000217, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000218, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000219, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x00021A, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x00021B, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x00021C, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000220, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000224, "Member 'BP_Input_Jianxin_C_____::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000228, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000238, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û¬w
// 0x0410 (0x0410 - 0x0000)
struct BP_Input_Jianxin_C____w final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBF[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC0[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0080(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC1[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x00A8(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00D0(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC2[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC3[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x023C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC4[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC5[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0280(0x0148)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC6[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC7[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C____w) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C____w");
static_assert(sizeof(BP_Input_Jianxin_C____w) == 0x000410, "Wrong size on BP_Input_Jianxin_C____w");
static_assert(offsetof(BP_Input_Jianxin_C____w, Time) == 0x000000, "Member 'BP_Input_Jianxin_C____w::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C____w::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Jianxin_C____w::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C____w::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000040, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000041, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand) == 0x000044, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000068, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ___wildcard_Variable_1) == 0x000080, "Member 'BP_Input_Jianxin_C____w::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000094, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_2) == 0x0000A8, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetPriority_ReturnValue) == 0x0000BC, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000C0, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillInfo_ReturnValue) == 0x0000D0, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetActivePriority_ReturnValue) == 0x000218, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00021D, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue) == 0x00021E, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Not_PreBool_ReturnValue) == 0x00021F, "Member 'BP_Input_Jianxin_C____w::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_Input_Jianxin_C____w::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000228, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue) == 0x000238, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_3) == 0x00023C, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_1) == 0x000250, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_2) == 0x000251, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000258, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x000268, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetPriority_ReturnValue_1) == 0x00026C, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000270, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000280, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetActivePriority_ReturnValue_1) == 0x0003C8, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0003CC, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003CD, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue_1) == 0x0003CE, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003CF, "Member 'BP_Input_Jianxin_C____w::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003D0, "Member 'BP_Input_Jianxin_C____w::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_3) == 0x0003D1, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_4) == 0x0003D2, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_5) == 0x0003D3, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D4, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003D5, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_IsMovingOnGround_ReturnValue) == 0x0003D6, "Member 'BP_Input_Jianxin_C____w::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue_2) == 0x0003D7, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_6) == 0x0003D8, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0003E0, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0003F0, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0003F8, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000408, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.&áyýÏ
// 0x0010 (0x0010 - 0x0000)
struct BP_Input_Jianxin_C___y___ final
{
public:
	bool                                          __;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C___y___) == 0x000004, "Wrong alignment on BP_Input_Jianxin_C___y___");
static_assert(sizeof(BP_Input_Jianxin_C___y___) == 0x000010, "Wrong size on BP_Input_Jianxin_C___y___");
static_assert(offsetof(BP_Input_Jianxin_C___y___, __) == 0x000000, "Member 'BP_Input_Jianxin_C___y___::__' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000008, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

