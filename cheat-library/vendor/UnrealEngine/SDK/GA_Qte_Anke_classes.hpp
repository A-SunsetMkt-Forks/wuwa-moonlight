#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Qte_Anke

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCameraModifier_Condition_structs.hpp"
#include "GA_Passive_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Qte_Anke.GA_Qte_Anke_C
// 0x0030 (0x0568 - 0x0538)
class UGA_Qte_Anke_C final : public UGa_Passive_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Qte_Anke_C;                      // 0x0538(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_QTE_Camera_C*                       QTECamera;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Entity_Id;                                         // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   ___ID;                                             // 0x054C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCameraModifier_Condition>     Camera_Modifier_Contions;                          // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Qte_Anke(int32 EntryPoint);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Qte_Anke_C">();
	}
	static class UGA_Qte_Anke_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Qte_Anke_C>();
	}
};
static_assert(alignof(UGA_Qte_Anke_C) == 0x000008, "Wrong alignment on UGA_Qte_Anke_C");
static_assert(sizeof(UGA_Qte_Anke_C) == 0x000568, "Wrong size on UGA_Qte_Anke_C");
static_assert(offsetof(UGA_Qte_Anke_C, UberGraphFrame_GA_Qte_Anke_C) == 0x000538, "Member 'UGA_Qte_Anke_C::UberGraphFrame_GA_Qte_Anke_C' has a wrong offset!");
static_assert(offsetof(UGA_Qte_Anke_C, QTECamera) == 0x000540, "Member 'UGA_Qte_Anke_C::QTECamera' has a wrong offset!");
static_assert(offsetof(UGA_Qte_Anke_C, Entity_Id) == 0x000548, "Member 'UGA_Qte_Anke_C::Entity_Id' has a wrong offset!");
static_assert(offsetof(UGA_Qte_Anke_C, ___ID) == 0x00054C, "Member 'UGA_Qte_Anke_C::___ID' has a wrong offset!");
static_assert(offsetof(UGA_Qte_Anke_C, Camera_Modifier_Contions) == 0x000558, "Member 'UGA_Qte_Anke_C::Camera_Modifier_Contions' has a wrong offset!");

}

