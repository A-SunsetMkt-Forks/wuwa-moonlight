#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lipsync_AL

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lipsync_AL.BP_Lipsync_AL_C
// 0x0018 (0x00D8 - 0x00C0)
class UBP_Lipsync_AL_C final : public UActorComponent
{
public:
	class UDataTable*                             Lipsync_Data;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LipsyncEvent;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_BP_Lipsync_AL_C;                             // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNum;                                            // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeBlendShape(const class FString& Param_Name, float Value);
	void PlayLipsync(int32 Id);
	void DoLipsync();
	void ShowFrameData(TArray<class FString>& Datas);
	void GetLipsyncData(int32 Id, class UDataTable** Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lipsync_AL_C">();
	}
	static class UBP_Lipsync_AL_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Lipsync_AL_C>();
	}
};
static_assert(alignof(UBP_Lipsync_AL_C) == 0x000008, "Wrong alignment on UBP_Lipsync_AL_C");
static_assert(sizeof(UBP_Lipsync_AL_C) == 0x0000D8, "Wrong size on UBP_Lipsync_AL_C");
static_assert(offsetof(UBP_Lipsync_AL_C, Lipsync_Data) == 0x0000C0, "Member 'UBP_Lipsync_AL_C::Lipsync_Data' has a wrong offset!");
static_assert(offsetof(UBP_Lipsync_AL_C, LipsyncEvent) == 0x0000C8, "Member 'UBP_Lipsync_AL_C::LipsyncEvent' has a wrong offset!");
static_assert(offsetof(UBP_Lipsync_AL_C, Index_BP_Lipsync_AL_C) == 0x0000D0, "Member 'UBP_Lipsync_AL_C::Index_BP_Lipsync_AL_C' has a wrong offset!");
static_assert(offsetof(UBP_Lipsync_AL_C, MaxNum) == 0x0000D4, "Member 'UBP_Lipsync_AL_C::MaxNum' has a wrong offset!");

}

