#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThunderGenerator

#include "Basic.hpp"

#include "BP_ThunderGenerator_classes.hpp"
#include "BP_ThunderGenerator_parameters.hpp"


namespace SDK
{

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ExecuteUbergraph_BP_ThunderGenerator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThunderGenerator_C::ExecuteUbergraph_BP_ThunderGenerator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "ExecuteUbergraph_BP_ThunderGenerator");

	Params::BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThunderGenerator_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "ReceiveEndPlay");

	Params::BP_ThunderGenerator_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnUpdateThunderEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThunderGenerator_C::OnUpdateThunderEffect(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "OnUpdateThunderEffect");

	Params::BP_ThunderGenerator_C_OnUpdateThunderEffect Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnThunderTypeChanged
// (Event, Protected, BlueprintEvent)

void ABP_ThunderGenerator_C::OnThunderTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "OnThunderTypeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnReceiveThunderAttack
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAttack                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ThunderGenerator_C::OnReceiveThunderAttack(const struct FVector& Location, bool bAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "OnReceiveThunderAttack");

	Params::BP_ThunderGenerator_C_OnReceiveThunderAttack Parms{};

	Parms.Location = std::move(Location);
	Parms.bAttack = bAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.UpdateAudio2D
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ThunderGenerator_C::UpdateAudio2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "UpdateAudio2D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ClearThunder
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ThunderGenerator_C::ClearThunder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThunderGenerator_C", "ClearThunder");

	UObject::ProcessEvent(Func, nullptr);
}

}

