#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseRole_Seq_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KuroAnim_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C
// 0x14E0 (0x1890 - 0x03B0)
class UABP_BaseRole_Seq_V2_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2BC5[0x8];                                     // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x03B8(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x03F0(0x0138)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0528(0x0020)()
	uint8                                         Pad_2BC6[0x8];                                     // 0x0548(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RBF                          AnimGraphNode_RBF;                                 // 0x0550(0x0150)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x06A0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x06C0(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x06F8(0x0138)()
	struct FAnimNode_CurveSource                  AnimGraphNode_CurveSource;                         // 0x0830(0x0040)()
	struct FAnimNode_CurveFix                     AnimGraphNode_CurveFix;                            // 0x0870(0x0030)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves_1;                     // 0x08A0(0x0060)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0900(0x0060)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves;                       // 0x0960(0x0060)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x09C0(0x00B0)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x0A70(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0B20(0x0060)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0B80(0x0038)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0BB8(0x0060)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0C18(0x0060)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0C78(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D40(0x0090)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0DD0(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0E08(0x0138)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0F40(0x0110)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1050(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1070(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1090(0x0110)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x11A0(0x01A8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1348(0x0110)()
	struct FAnimNode_MorphTargetModifier          AnimGraphNode_MorphTargetModifier;                 // 0x1458(0x0060)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x14B8(0x0038)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x14F0(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x15B0(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x1670(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x1730(0x00C0)()
	struct FVector2D                              LookXY;                                            // 0x17F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LookFixHead;                                       // 0x17F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LookFixNeck;                                       // 0x1804(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Enable_AimOffset;                                  // 0x1810(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC7[0x3];                                     // 0x1811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LookFixSpine;                                      // 0x1814(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAimOffsetBlendSpace*                   AimOffset;                                         // 0x1820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Stand;                                      // 0x1828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC8[0x7];                                     // 0x1829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Stand;                                             // 0x1830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSwitchPose;                                  // 0x1838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC9[0x7];                                     // 0x1839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          CachePose;                                         // 0x1840(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SwitchPoseTime;                                    // 0x1880(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_BaseRole_Seq_V2(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void __B_0(const struct FPoseLink& InPose_0, struct FPoseLink* Param___B);
	void _SB(struct FPoseLink* Param__SB);
	void b_B(const struct FPoseLink& InPose, struct FPoseLink* Param_b_B);
	void __B(const struct FPoseLink& InPose_0, struct FPoseLink* Param___B);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BaseRole_Seq_V2_C">();
	}
	static class UABP_BaseRole_Seq_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BaseRole_Seq_V2_C>();
	}
};
static_assert(alignof(UABP_BaseRole_Seq_V2_C) == 0x000010, "Wrong alignment on UABP_BaseRole_Seq_V2_C");
static_assert(sizeof(UABP_BaseRole_Seq_V2_C) == 0x001890, "Wrong size on UABP_BaseRole_Seq_V2_C");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, UberGraphFrame) == 0x0003B0, "Member 'UABP_BaseRole_Seq_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_4) == 0x0003B8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose_2) == 0x0003F0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000528, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_RBF) == 0x000550, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_RBF' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0006A0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_3) == 0x0006C0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose_1) == 0x0006F8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CurveSource) == 0x000830, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CurveSource' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CurveFix) == 0x000870, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CurveFix' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CombineCurves_1) == 0x0008A0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CombineCurves_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_3) == 0x000900, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CombineCurves) == 0x000960, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CombineCurves' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_BlendListByBool) == 0x0009C0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_PoseSnapshot) == 0x000A70, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_2) == 0x000B20, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_2) == 0x000B80, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_1) == 0x000BB8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot) == 0x000C18, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_TwoWayBlend) == 0x000C78, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_SequencePlayer) == 0x000D40, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_1) == 0x000DD0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose) == 0x000E08, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_2) == 0x000F40, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LocalToComponentSpace) == 0x001050, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ComponentToLocalSpace) == 0x001070, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_1) == 0x001090, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0011A0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone) == 0x001348, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_MorphTargetModifier) == 0x001458, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_MorphTargetModifier' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root) == 0x0014B8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_3) == 0x0014F0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0015B0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_1) == 0x001670, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer) == 0x001730, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookXY) == 0x0017F0, "Member 'UABP_BaseRole_Seq_V2_C::LookXY' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixHead) == 0x0017F8, "Member 'UABP_BaseRole_Seq_V2_C::LookFixHead' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixNeck) == 0x001804, "Member 'UABP_BaseRole_Seq_V2_C::LookFixNeck' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Enable_AimOffset) == 0x001810, "Member 'UABP_BaseRole_Seq_V2_C::Enable_AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixSpine) == 0x001814, "Member 'UABP_BaseRole_Seq_V2_C::LookFixSpine' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AimOffset) == 0x001820, "Member 'UABP_BaseRole_Seq_V2_C::AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Enable_Stand) == 0x001828, "Member 'UABP_BaseRole_Seq_V2_C::Enable_Stand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Stand) == 0x001830, "Member 'UABP_BaseRole_Seq_V2_C::Stand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, EnableSwitchPose) == 0x001838, "Member 'UABP_BaseRole_Seq_V2_C::EnableSwitchPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, CachePose) == 0x001840, "Member 'UABP_BaseRole_Seq_V2_C::CachePose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, SwitchPoseTime) == 0x001880, "Member 'UABP_BaseRole_Seq_V2_C::SwitchPoseTime' has a wrong offset!");

}

