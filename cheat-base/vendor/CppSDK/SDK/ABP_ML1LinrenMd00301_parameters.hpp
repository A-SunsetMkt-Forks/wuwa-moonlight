#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ML1LinrenMd00301

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KuroAnim_structs.hpp"


namespace SDK::Params
{

// Function ABP_ML1LinrenMd00301.ABP_ML1LinrenMd00301_C.ExecuteUbergraph_ABP_ML1LinrenMd00301
// 0x0048 (0x0048 - 0x0000)
struct ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitBones                              K2Node_MakeStruct_HitBones;                        // 0x0010(0x0010)()
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301) == 0x000008, "Wrong alignment on ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301");
static_assert(sizeof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301) == 0x000048, "Wrong size on ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, EntryPoint) == 0x000000, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x000004, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000008, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, K2Node_MakeStruct_HitBones) == 0x000010, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::K2Node_MakeStruct_HitBones' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanOR_ReturnValue_2) == 0x000021, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanOR_ReturnValue_3) == 0x000028, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, K2Node_Event_DeltaTimeX) == 0x00002C, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_Percent_IntInt_ReturnValue) == 0x000038, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x00003C, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000040, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301, CallFunc_BooleanOR_ReturnValue_4) == 0x000041, "Member 'ABP_ML1LinrenMd00301_C_ExecuteUbergraph_ABP_ML1LinrenMd00301::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function ABP_ML1LinrenMd00301.ABP_ML1LinrenMd00301_C.IKAndFk_Clone
// 0x0020 (0x0020 - 0x0000)
struct ABP_ML1LinrenMd00301_C_IKAndFk_Clone final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              IKAndFk_Clone_0;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_ML1LinrenMd00301_C_IKAndFk_Clone) == 0x000008, "Wrong alignment on ABP_ML1LinrenMd00301_C_IKAndFk_Clone");
static_assert(sizeof(ABP_ML1LinrenMd00301_C_IKAndFk_Clone) == 0x000020, "Wrong size on ABP_ML1LinrenMd00301_C_IKAndFk_Clone");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_IKAndFk_Clone, InPose) == 0x000000, "Member 'ABP_ML1LinrenMd00301_C_IKAndFk_Clone::InPose' has a wrong offset!");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_IKAndFk_Clone, IKAndFk_Clone_0) == 0x000010, "Member 'ABP_ML1LinrenMd00301_C_IKAndFk_Clone::IKAndFk_Clone_0' has a wrong offset!");

// Function ABP_ML1LinrenMd00301.ABP_ML1LinrenMd00301_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_ML1LinrenMd00301_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_ML1LinrenMd00301.ABP_ML1LinrenMd00301_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_ML1LinrenMd00301_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph_0;                                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_ML1LinrenMd00301_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_ML1LinrenMd00301_C_AnimGraph");
static_assert(sizeof(ABP_ML1LinrenMd00301_C_AnimGraph) == 0x000010, "Wrong size on ABP_ML1LinrenMd00301_C_AnimGraph");
static_assert(offsetof(ABP_ML1LinrenMd00301_C_AnimGraph, Param_AnimGraph_0) == 0x000000, "Member 'ABP_ML1LinrenMd00301_C_AnimGraph::Param_AnimGraph_0' has a wrong offset!");

}

