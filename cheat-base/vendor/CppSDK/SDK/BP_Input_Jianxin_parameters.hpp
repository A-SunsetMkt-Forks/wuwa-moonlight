#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Jianxin

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SInputCommand_structs.hpp"
#include "SSkillInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û	
// 0x0D60 (0x0D60 - 0x0000)
struct BP_Input_Jianxin_C_Func______18 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0084(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x00AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x00D4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0100(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ___int_Array_Index_Variable;                       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x027C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0290(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x02B0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x02D8(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0300(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0477(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x0488(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x04B0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_4;        // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3; // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_6;                 // 0x04DC(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x0518(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x068E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x068F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_7;                 // 0x0694(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_3;                            // 0x06AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x06D8(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_3;                // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_3;      // 0x0700(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4; // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_3;          // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x071A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x071B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D[0x3];                                      // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_3;               // 0x0720(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891[0x3];                                      // 0x0891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_8;                 // 0x0894(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x08B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x08C8(0x0020)()
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_9;                 // 0x08EC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5; // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_4;                            // 0x0918(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_4;                // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_4;      // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_4;               // 0x0940(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_4;          // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x0AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0AB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0AB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0ABB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_5;        // 0x0ABC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0ABD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0ABE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0ABF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC1[0x3];                                      // 0x0AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_10;                // 0x0AC4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_6;        // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD9[0x7];                                      // 0x0AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_5;      // 0x0AE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_5;          // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_11;                // 0x0AF8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0B0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0B0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0B0F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0B10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B21[0x7];                                      // 0x0B21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_5;               // 0x0B28(0x0170)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0C98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA9[0x3];                                      // 0x0CA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_5;                // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_5;      // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0CB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0CB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0CB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB6[0x2];                                      // 0x0CB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_5;                            // 0x0CB8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCD[0x3];                                      // 0x0CCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0CD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE1[0x7];                                      // 0x0CE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0CE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x0CF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0CFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFB[0x5];                                      // 0x0CFB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0D00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D12[0x6];                                      // 0x0D12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0D18(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2C[0x4];                                      // 0x0D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0D30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D42[0x6];                                      // 0x0D42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x0D48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x000D60, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc______ReturnValue) == 0x000038, "Member 'BP_Input_Jianxin_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000050, "Member 'BP_Input_Jianxin_C_____::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Variable) == 0x000064, "Member 'BP_Input_Jianxin_C_____::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000068, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x00006C, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000080, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000084, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x0000A8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x0000AC, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x0000D0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_1) == 0x0000D4, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x0000E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000EC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000F0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x000100, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000270, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000274, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000275, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000276, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x000277, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Array_Index_Variable) == 0x000278, "Member 'BP_Input_Jianxin_C_____::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x00027C, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Get_Item) == 0x000290, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0002A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x0002B0, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0002C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_2) == 0x0002D8, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002EC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002F0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000300, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x000470, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000474, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000475, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000476, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x000477, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x000478, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x000479, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x00047A, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00047B, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Loop_Counter_Variable) == 0x00047C, "Member 'BP_Input_Jianxin_C_____::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000480, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000481, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Less_IntInt_ReturnValue) == 0x000482, "Member 'BP_Input_Jianxin_C_____::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Add_IntInt_ReturnValue) == 0x000484, "Member 'BP_Input_Jianxin_C_____::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_4) == 0x000488, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0004A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_5) == 0x0004B0, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_4) == 0x0004C4, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0004C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3) == 0x0004D8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_6) == 0x0004DC, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0004F0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_2) == 0x000500, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x000508, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_2) == 0x000518, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_2) == 0x000688, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x00068C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00068D, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x00068E, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_2) == 0x00068F, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000690, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_7) == 0x000694, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x0006A8, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_3) == 0x0006AC, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x0006C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x0006C1, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0006C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0006D8, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_3) == 0x0006F8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_3) == 0x000700, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4) == 0x000710, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_3) == 0x000714, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x000718, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x000719, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00071A, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x00071B, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_7) == 0x00071C, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_3) == 0x000720, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_8) == 0x000890, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_8) == 0x000894, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0008A8, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_8) == 0x0008B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_3) == 0x0008C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0008C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_9) == 0x0008E8, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_9) == 0x0008EC, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5) == 0x000900, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000908, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_4) == 0x000918, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_4) == 0x00092C, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_4) == 0x000930, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_4) == 0x000940, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_4) == 0x000AB0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x000AB4, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000AB5, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_3) == 0x000AB6, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_4) == 0x000AB7, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000AB8, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_10) == 0x000AB9, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_11) == 0x000ABA, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_12) == 0x000ABB, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_5) == 0x000ABC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_4) == 0x000ABD, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_13) == 0x000ABE, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000ABF, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_14) == 0x000AC0, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_10) == 0x000AC4, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_6) == 0x000AD8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_5) == 0x000AE0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_5) == 0x000AF0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___int_Variable_1) == 0x000AF4, "Member 'BP_Input_Jianxin_C_____::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_11) == 0x000AF8, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000B0C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000B0D, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000B0E, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_5) == 0x000B0F, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000B10, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_15) == 0x000B20, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_5) == 0x000B28, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000C98, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000CA8, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_5) == 0x000CAC, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_5) == 0x000CB0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_5) == 0x000CB1, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000CB2, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_6) == 0x000CB3, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_16) == 0x000CB4, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_17) == 0x000CB5, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_5) == 0x000CB8, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_18) == 0x000CCC, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000CD0, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000CE0, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000CE8, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000CF8, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___bool_True_if_break_was_hit_Variable) == 0x000CF9, "Member 'BP_Input_Jianxin_C_____::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_6) == 0x000CFA, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000D00, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000D10, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_7) == 0x000D11, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeArray_Array) == 0x000D18, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_Get_Item_1) == 0x000D28, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000D30, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000D40, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000D41, "Member 'BP_Input_Jianxin_C_____::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000D48, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000D58, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û	
// 0x04A8 (0x04A8 - 0x0000)
struct BP_Input_Jianxin_C_Func______17 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0048(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0074(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0098(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00D8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0254(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x5];                                      // 0x0283(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0288(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02C0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x043C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0453(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc___________;                               // 0x0457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x0004A8, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Jianxin_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x000030, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000044, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000048, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000070, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000071, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000074, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000098, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000C8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000D8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000248, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00024C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00024D, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00024E, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00024F, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x000254, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000268, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000270, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000280, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000281, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000282, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000288, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002A8, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002B0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002C0, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x000430, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000434, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000435, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x000436, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x000437, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000438, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable_1) == 0x00043C, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000450, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000451, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x000452, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000453, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000454, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000455, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x000456, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc___________) == 0x000457, "Member 'BP_Input_Jianxin_C_____::CallFunc___________' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x000458, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000460, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000470, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000478, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000488, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000490, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0004A0, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.ý1	
// 0x0688 (0x0688 - 0x0000)
struct BP_Input_Jianxin_C___1___0 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0220(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0234(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0258(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0280(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02C0(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43A[0x2];                                      // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x043C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x046C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x0480(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x04C0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0635(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0636(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0637(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x063B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E[0x2];                                      // 0x063E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0640(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0670(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C___1__) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C___1__");
static_assert(sizeof(BP_Input_Jianxin_C___1__) == 0x000688, "Wrong size on BP_Input_Jianxin_C___1__");
static_assert(offsetof(BP_Input_Jianxin_C___1__, Time) == 0x000000, "Member 'BP_Input_Jianxin_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc___1___ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand) == 0x000040, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000068, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000090, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue) == 0x000218, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00021D, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00021E, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue) == 0x00021F, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable_1) == 0x000220, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_2) == 0x000234, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000248, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_3) == 0x000258, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x00026C, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000270, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000280, "Member 'BP_Input_Jianxin_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue_1) == 0x0002A0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x0002A4, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002A8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x0002B8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue_1) == 0x0002BC, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002C0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000430, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x000431, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000432, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000433, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue_1) == 0x000434, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_1) == 0x000435, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_2) == 0x000436, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_3) == 0x000437, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000438, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_1) == 0x000439, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_4) == 0x00043C, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_4) == 0x000450, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000458, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_5) == 0x000468, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, ___wildcard_Variable_2) == 0x00046C, "Member 'BP_Input_Jianxin_C___1__::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, K2Node_MakeStruct_SInputCommand_5) == 0x000480, "Member 'BP_Input_Jianxin_C___1__::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000498, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x0004A8, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetPriority_ReturnValue_2) == 0x0004AC, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x0004B0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetSkillInfo_ReturnValue_2) == 0x0004C0, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_GetActivePriority_ReturnValue_2) == 0x000630, "Member 'BP_Input_Jianxin_C___1__::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000634, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000635, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_2) == 0x000636, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Not_PreBool_ReturnValue_2) == 0x000637, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000638, "Member 'BP_Input_Jianxin_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_6) == 0x000639, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_7) == 0x00063A, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x00063B, "Member 'BP_Input_Jianxin_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_8) == 0x00063C, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00063D, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000640, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000650, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000651, "Member 'BP_Input_Jianxin_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x000652, "Member 'BP_Input_Jianxin_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanAND_ReturnValue_3) == 0x000653, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_BooleanOR_ReturnValue_9) == 0x000654, "Member 'BP_Input_Jianxin_C___1__::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000658, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000668, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000670, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000680, "Member 'BP_Input_Jianxin_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.'Û	
// 0x0268 (0x0268 - 0x0000)
struct BP_Input_Jianxin_C_Func______16 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0058(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0098(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0218(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C_____) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C_____");
static_assert(sizeof(BP_Input_Jianxin_C_____) == 0x000268, "Wrong size on BP_Input_Jianxin_C_____");
static_assert(offsetof(BP_Input_Jianxin_C_____, Time) == 0x000000, "Member 'BP_Input_Jianxin_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000040, "Member 'BP_Input_Jianxin_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, ___wildcard_Variable) == 0x000044, "Member 'BP_Input_Jianxin_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000058, "Member 'BP_Input_Jianxin_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'BP_Input_Jianxin_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000080, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetPriority_ReturnValue) == 0x000084, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000088, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x000098, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000208, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00020C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00020D, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00020E, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00020F, "Member 'BP_Input_Jianxin_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000210, "Member 'BP_Input_Jianxin_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000218, "Member 'BP_Input_Jianxin_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000238, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00023C, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00023D, "Member 'BP_Input_Jianxin_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00023E, "Member 'BP_Input_Jianxin_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x00023F, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000240, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000241, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000242, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000243, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000244, "Member 'BP_Input_Jianxin_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000248, "Member 'BP_Input_Jianxin_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00024C, "Member 'BP_Input_Jianxin_C_____::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000250, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000260, "Member 'BP_Input_Jianxin_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.;û¬w
// 0x0460 (0x0460 - 0x0000)
struct BP_Input_Jianxin_C____w_6 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0080(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x00A8(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00D0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0264(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x041F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0426(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0427(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C____w) == 0x000008, "Wrong alignment on BP_Input_Jianxin_C____w");
static_assert(sizeof(BP_Input_Jianxin_C____w) == 0x000460, "Wrong size on BP_Input_Jianxin_C____w");
static_assert(offsetof(BP_Input_Jianxin_C____w, Time) == 0x000000, "Member 'BP_Input_Jianxin_C____w::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C____w::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Jianxin_C____w::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_Input_Jianxin_C____w::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000040, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000041, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand) == 0x000044, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000068, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, ___wildcard_Variable_1) == 0x000080, "Member 'BP_Input_Jianxin_C____w::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000094, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_2) == 0x0000A8, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetPriority_ReturnValue) == 0x0000BC, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000C0, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillInfo_ReturnValue) == 0x0000D0, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetActivePriority_ReturnValue) == 0x000240, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000244, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000245, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue) == 0x000246, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Not_PreBool_ReturnValue) == 0x000247, "Member 'BP_Input_Jianxin_C____w::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000248, "Member 'BP_Input_Jianxin_C____w::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000250, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue) == 0x000260, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, K2Node_MakeStruct_SInputCommand_3) == 0x000264, "Member 'BP_Input_Jianxin_C____w::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_1) == 0x000278, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_2) == 0x000279, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000280, "Member 'BP_Input_Jianxin_C____w::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x000290, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetPriority_ReturnValue_1) == 0x000294, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000298, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002A8, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_GetActivePriority_ReturnValue_1) == 0x000418, "Member 'BP_Input_Jianxin_C____w::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00041C, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00041D, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue_1) == 0x00041E, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Not_PreBool_ReturnValue_1) == 0x00041F, "Member 'BP_Input_Jianxin_C____w::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000420, "Member 'BP_Input_Jianxin_C____w::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_3) == 0x000421, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_4) == 0x000422, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_5) == 0x000423, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000424, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000425, "Member 'BP_Input_Jianxin_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_IsMovingOnGround_ReturnValue) == 0x000426, "Member 'BP_Input_Jianxin_C____w::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanAND_ReturnValue_2) == 0x000427, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_BooleanOR_ReturnValue_6) == 0x000428, "Member 'BP_Input_Jianxin_C____w::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000430, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000440, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000448, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000458, "Member 'BP_Input_Jianxin_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_Input_Jianxin.BP_Input_Jianxin_C.&áyýÏ
// 0x0010 (0x0010 - 0x0000)
struct BP_Input_Jianxin_C___y___ final
{
public:
	bool                                          __;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Jianxin_C___y___) == 0x000004, "Wrong alignment on BP_Input_Jianxin_C___y___");
static_assert(sizeof(BP_Input_Jianxin_C___y___) == 0x000010, "Wrong size on BP_Input_Jianxin_C___y___");
static_assert(offsetof(BP_Input_Jianxin_C___y___, __) == 0x000000, "Member 'BP_Input_Jianxin_C___y___::__' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000004, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000008, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Jianxin_C___y___, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Input_Jianxin_C___y___::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

