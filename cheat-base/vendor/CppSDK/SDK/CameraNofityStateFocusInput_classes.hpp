#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraNofityStateFocusInput

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass CameraNofityStateFocusInput.CameraNofityStateFocusInput_C
// 0x0028 (0x0070 - 0x0048)
class UCameraNofityStateFocusInput_C final : public UKuroAnimNotifyState
{
public:
	float                                         FocusLimitLength;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchSpeed;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawSpeed;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDistance;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistance;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LockOnPart;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraNofityStateFocusInput_C">();
	}
	static class UCameraNofityStateFocusInput_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraNofityStateFocusInput_C>();
	}
};
static_assert(alignof(UCameraNofityStateFocusInput_C) == 0x000008, "Wrong alignment on UCameraNofityStateFocusInput_C");
static_assert(sizeof(UCameraNofityStateFocusInput_C) == 0x000070, "Wrong size on UCameraNofityStateFocusInput_C");
static_assert(offsetof(UCameraNofityStateFocusInput_C, FocusLimitLength) == 0x000048, "Member 'UCameraNofityStateFocusInput_C::FocusLimitLength' has a wrong offset!");
static_assert(offsetof(UCameraNofityStateFocusInput_C, PitchSpeed) == 0x00004C, "Member 'UCameraNofityStateFocusInput_C::PitchSpeed' has a wrong offset!");
static_assert(offsetof(UCameraNofityStateFocusInput_C, YawSpeed) == 0x000050, "Member 'UCameraNofityStateFocusInput_C::YawSpeed' has a wrong offset!");
static_assert(offsetof(UCameraNofityStateFocusInput_C, MinDistance) == 0x000054, "Member 'UCameraNofityStateFocusInput_C::MinDistance' has a wrong offset!");
static_assert(offsetof(UCameraNofityStateFocusInput_C, MaxDistance) == 0x000058, "Member 'UCameraNofityStateFocusInput_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(UCameraNofityStateFocusInput_C, LockOnPart) == 0x000060, "Member 'UCameraNofityStateFocusInput_C::LockOnPart' has a wrong offset!");

}

