#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_CommonMaleXL_AimMode_Loop

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop
// 0x0730 (0x0730 - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x0008(0x00B8)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0028)(ZeroConstructor)
	struct FGameplayEventData                     ___struct_Variable;                                // 0x00E8(0x00B8)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x0028)(ZeroConstructor)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x01D8(0x00B8)()
	struct FGameplayEventData                     ___struct_Variable_1;                              // 0x0290(0x00B8)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_2;            // 0x0358(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_5;                          // 0x0380(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_2;                              // 0x038C(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagRemoved*    CallFunc_WaitGameplayTagRemove_ReturnValue;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x03A8(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_4;                          // 0x03D0(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_3;                              // 0x03DC(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_4;            // 0x03F8(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_3;                          // 0x0420(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_4;                              // 0x042C(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_1;         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_5;            // 0x0448(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_2;                          // 0x0470(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_5;                              // 0x047C(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_2;         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_6;            // 0x0498(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag_1;                          // 0x04C0(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_6;                              // 0x04CC(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_3;         // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& Tag)>     K2Node_CreateDelegate_OutputDelegate_7;            // 0x04E8(0x0028)(ZeroConstructor)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0510(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_7;                              // 0x051C(0x000C)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_4;         // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x6];                                      // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_2;          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     ___struct_Variable_8;                              // 0x0548(0x00B8)()
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc______________;                            // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_2;                      // 0x0628(0x00B8)()
	bool                                          CallFunc_______________1;                          // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x06E8(0x0028)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0710(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0720(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop) == 0x000008, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop) == 0x000730, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, EntryPoint) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Payload_1) == 0x000008, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable) == 0x0000E8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0001A0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Payload) == 0x0001D8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_1) == 0x000290, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000348, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_1) == 0x000350, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_2) == 0x000358, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag_5) == 0x000380, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag_5' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_2) == 0x00038C, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagRemove_ReturnValue) == 0x000398, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_2) == 0x0003A0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003A8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag_4) == 0x0003D0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag_4' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_3) == 0x0003DC, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x0003E8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_3) == 0x0003F0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003F8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag_3) == 0x000420, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag_3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_4) == 0x00042C, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagAdd_ReturnValue_1) == 0x000438, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagAdd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_4) == 0x000440, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_5) == 0x000448, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag_2) == 0x000470, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_5) == 0x00047C, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagAdd_ReturnValue_2) == 0x000488, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagAdd_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_5) == 0x000490, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_6) == 0x000498, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag_1) == 0x0004C0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_6) == 0x0004CC, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagAdd_ReturnValue_3) == 0x0004D8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagAdd_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_6) == 0x0004E0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_7) == 0x0004E8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Tag) == 0x000510, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_7) == 0x00051C, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayTagAdd_ReturnValue_4) == 0x000528, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayTagAdd_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_7) == 0x000530, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_Event_bWasCancelled) == 0x000531, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_WaitGameplayEvent_ReturnValue_2) == 0x000538, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_WaitGameplayEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_IsValid_ReturnValue_8) == 0x000540, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, ___struct_Variable_8) == 0x000548, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::___struct_Variable_8' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc__________) == 0x000600, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc______________) == 0x000608, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc___________1) == 0x000610, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc___________2) == 0x000618, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc___________3) == 0x000620, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CustomEvent_Payload_2) == 0x000628, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CustomEvent_Payload_2' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_______________1) == 0x0006E0, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_______________1' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, K2Node_CreateDelegate_OutputDelegate_8) == 0x0006E8, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_Conv_IntToString_ReturnValue) == 0x000710, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000720, "Member 'GA_CommonMaleXL_AimMode_Loop_C_ExecuteUbergraph_GA_CommonMaleXL_AimMode_Loop::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Added_7970F50E429588213C1DCE818F152235
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Added_7970F50E429588213C1DCE818F152235::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Added_D8B84C7B40B280C4C7DFFEAC63C9CCF3::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Added_A2C134B24491879E7774C49150B5709A
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Added_A2C134B24491879E7774C49150B5709A::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Added_CF1629154081ACA2BB4E2DB5CFBB1DEC
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Added_CF1629154081ACA2BB4E2DB5CFBB1DEC::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Added_E54B386745D796C6622339856AC999E7
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Added_E54B386745D796C6622339856AC999E7::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.Removed_1DD1C85741CD361EAE7F4B9DCD34F648
// 0x000C (0x000C - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648 final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648) == 0x000004, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648) == 0x00000C, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648, Tag) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_Removed_1DD1C85741CD361EAE7F4B9DCD34F648::Tag' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.EventReceived_18B59F5945020DB23C42FD887623D1BB
// 0x00B8 (0x00B8 - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB) == 0x000008, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB) == 0x0000B8, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB, Payload) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD887623D1BB::Payload' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.EventReceived_18B59F5945020DB23C42FD8813455167
// 0x00B8 (0x00B8 - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167) == 0x000008, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167) == 0x0000B8, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167, Payload) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8813455167::Payload' has a wrong offset!");

// Function GA_CommonMaleXL_AimMode_Loop.GA_CommonMaleXL_AimMode_Loop_C.EventReceived_18B59F5945020DB23C42FD8853A2FB4C
// 0x00B8 (0x00B8 - 0x0000)
struct GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C) == 0x000008, "Wrong alignment on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C");
static_assert(sizeof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C) == 0x0000B8, "Wrong size on GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C");
static_assert(offsetof(GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C, Payload) == 0x000000, "Member 'GA_CommonMaleXL_AimMode_Loop_C_EventReceived_18B59F5945020DB23C42FD8853A2FB4C::Payload' has a wrong offset!");

}

