#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Baer

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SInputCommand_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "ECharViewDirectionState_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Baer.BP_Input_Baer_C.;û	
// 0x0480 (0x0480 - 0x0000)
struct BP_Input_Baer_C_Func______19 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0050(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0064(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0090(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00C8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0240(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x026C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0298(0x0014)(NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE[0x2];                                      // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02D8(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F[0x1];                                      // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Baer_C_____) == 0x000008, "Wrong alignment on BP_Input_Baer_C_____");
static_assert(sizeof(BP_Input_Baer_C_____) == 0x000480, "Wrong size on BP_Input_Baer_C_____");
static_assert(offsetof(BP_Input_Baer_C_____, Time) == 0x000000, "Member 'BP_Input_Baer_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_Input_Baer_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable) == 0x000050, "Member 'BP_Input_Baer_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000064, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000078, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000088, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000090, "Member 'BP_Input_Baer_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000B0, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000B8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000C8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000238, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00023D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00023E, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00023F, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000240, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000254, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000258, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000268, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x00026C, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000280, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000288, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable_1) == 0x000298, "Member 'BP_Input_Baer_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetDirectionState_ReturnValue) == 0x0002AC, "Member 'BP_Input_Baer_C_____::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002AD, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002B0, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x0002B4, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002B8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue) == 0x0002C8, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x0002CC, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D0, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0002D1, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x0002D2, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D3, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002D4, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002D8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000448, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000449, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00044A, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00044B, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x00044C, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x00044D, "Member 'BP_Input_Baer_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00044E, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000450, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000460, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000461, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000462, "Member 'BP_Input_Baer_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x000463, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x000464, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000468, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000478, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.;û	
// 0x0280 (0x0280 - 0x0000)
struct BP_Input_Baer_C_Func______18 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0068(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0228(0x0020)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Baer_C_____) == 0x000008, "Wrong alignment on BP_Input_Baer_C_____");
static_assert(sizeof(BP_Input_Baer_C_____) == 0x000280, "Wrong size on BP_Input_Baer_C_____");
static_assert(offsetof(BP_Input_Baer_C_____, Time) == 0x000000, "Member 'BP_Input_Baer_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Baer_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x00002C, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable) == 0x000030, "Member 'BP_Input_Baer_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand) == 0x000044, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000068, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00007C, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000090, "Member 'BP_Input_Baer_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000098, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000218, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00021D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00021E, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00021F, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000228, "Member 'BP_Input_Baer_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000249, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x00024A, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00024B, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00024C, "Member 'BP_Input_Baer_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00024D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x00024E, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x00024F, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000250, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000260, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000268, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000278, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.;û¬w
// 0x0748 (0x0748 - 0x0000)
struct BP_Input_Baer_C____w_7 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0068(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0224(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0240(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0254(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0288(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0404(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41B[0x1];                                      // 0x041B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0420(0x0020)()
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0448(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B[0x1];                                      // 0x047B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x047C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x04AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x04F0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0666(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0667(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x066B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66E[0x2];                                      // 0x066E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0670(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0690(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x06B0(0x0010)(ReferenceParm)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x06C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x06D4(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x06E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x06E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x06E8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x06FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x06FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x06FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0700(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0715(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716[0x2];                                      // 0x0716(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x072A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x072B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D[0x3];                                      // 0x072D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0730(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Baer_C____w) == 0x000008, "Wrong alignment on BP_Input_Baer_C____w");
static_assert(sizeof(BP_Input_Baer_C____w) == 0x000748, "Wrong size on BP_Input_Baer_C____w");
static_assert(offsetof(BP_Input_Baer_C____w, Time) == 0x000000, "Member 'BP_Input_Baer_C____w::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C____w::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Baer_C____w::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000030, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand) == 0x000040, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetActivePriority_ReturnValue) == 0x000054, "Member 'BP_Input_Baer_C____w::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand_1) == 0x000068, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetDirectionState_ReturnValue) == 0x000090, "Member 'BP_Input_Baer_C____w::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Baer_C____w::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000098, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A8, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetActivePriority_ReturnValue_1) == 0x000218, "Member 'BP_Input_Baer_C____w::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00021D, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00021E, "Member 'BP_Input_Baer_C____w::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Not_PreBool_ReturnValue) == 0x00021F, "Member 'BP_Input_Baer_C____w::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___int_Loop_Counter_Variable) == 0x000220, "Member 'BP_Input_Baer_C____w::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___wildcard_Variable) == 0x000224, "Member 'BP_Input_Baer_C____w::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Add_IntInt_ReturnValue) == 0x000238, "Member 'BP_Input_Baer_C____w::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___int_Variable) == 0x00023C, "Member 'BP_Input_Baer_C____w::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand_2) == 0x000240, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand_3) == 0x000254, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000268, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000278, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000288, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetPriority_ReturnValue_1) == 0x0003F8, "Member 'BP_Input_Baer_C____w::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0003FC, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003FD, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003FE, "Member 'BP_Input_Baer_C____w::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003FF, "Member 'BP_Input_Baer_C____w::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___bool_True_if_break_was_hit_Variable) == 0x000400, "Member 'BP_Input_Baer_C____w::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___wildcard_Variable_1) == 0x000404, "Member 'BP_Input_Baer_C____w::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Not_PreBool_ReturnValue_2) == 0x000418, "Member 'BP_Input_Baer_C____w::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000419, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x00041A, "Member 'BP_Input_Baer_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___int_Array_Index_Variable) == 0x00041C, "Member 'BP_Input_Baer_C____w::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000420, "Member 'BP_Input_Baer_C____w::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000440, "Member 'BP_Input_Baer_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue) == 0x000441, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000448, "Member 'BP_Input_Baer_C____w::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000468, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000478, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000479, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Not_PreBool_ReturnValue_3) == 0x00047A, "Member 'BP_Input_Baer_C____w::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand_4) == 0x00047C, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x000490, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000498, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanAND_ReturnValue) == 0x0004A8, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_1) == 0x0004A9, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeStruct_SInputCommand_5) == 0x0004AC, "Member 'BP_Input_Baer_C____w::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_2) == 0x0004C0, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0004C8, "Member 'BP_Input_Baer_C____w::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___int_Variable_1) == 0x0004D8, "Member 'BP_Input_Baer_C____w::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetPriority_ReturnValue_2) == 0x0004DC, "Member 'BP_Input_Baer_C____w::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x0004E0, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillInfo_ReturnValue_2) == 0x0004F0, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetActivePriority_ReturnValue_2) == 0x000660, "Member 'BP_Input_Baer_C____w::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000664, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000665, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanAND_ReturnValue_1) == 0x000666, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Not_PreBool_ReturnValue_4) == 0x000667, "Member 'BP_Input_Baer_C____w::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000668, "Member 'BP_Input_Baer_C____w::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_3) == 0x000669, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_4) == 0x00066A, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_5) == 0x00066B, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x00066C, "Member 'BP_Input_Baer_C____w::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_6) == 0x00066D, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000670, "Member 'BP_Input_Baer_C____w::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000690, "Member 'BP_Input_Baer_C____w::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0006B0, "Member 'BP_Input_Baer_C____w::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0006C0, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0006D0, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Array_Get_Item) == 0x0006D4, "Member 'BP_Input_Baer_C____w::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Array_Length_ReturnValue) == 0x0006E0, "Member 'BP_Input_Baer_C____w::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Less_IntInt_ReturnValue) == 0x0006E4, "Member 'BP_Input_Baer_C____w::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanAND_ReturnValue_2) == 0x0006E5, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x0006E6, "Member 'BP_Input_Baer_C____w::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanAND_ReturnValue_3) == 0x0006E7, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ___wildcard_Variable_2) == 0x0006E8, "Member 'BP_Input_Baer_C____w::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_7) == 0x0006FC, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_8) == 0x0006FD, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_CanResponseInput_ReturnValue) == 0x0006FE, "Member 'BP_Input_Baer_C____w::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Less_FloatFloat_ReturnValue) == 0x0006FF, "Member 'BP_Input_Baer_C____w::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, K2Node_MakeArray_Array) == 0x000700, "Member 'BP_Input_Baer_C____w::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Array_Get_Item_1) == 0x000710, "Member 'BP_Input_Baer_C____w::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000714, "Member 'BP_Input_Baer_C____w::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000715, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000718, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000728, "Member 'BP_Input_Baer_C____w::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000729, "Member 'BP_Input_Baer_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_IsMovingOnGround_ReturnValue) == 0x00072A, "Member 'BP_Input_Baer_C____w::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanAND_ReturnValue_4) == 0x00072B, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_BooleanOR_ReturnValue_9) == 0x00072C, "Member 'BP_Input_Baer_C____w::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000730, "Member 'BP_Input_Baer_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000740, "Member 'BP_Input_Baer_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.ý1	
// 0x0478 (0x0478 - 0x0000)
struct BP_Input_Baer_C___1___1 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0098(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x022C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0244(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0258(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc___Current_______;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0298(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x040E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x040F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_412[0x2];                                      // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc___Current________1;                       // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41B[0x5];                                      // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0420(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0444(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A[0x6];                                      // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Baer_C___1__) == 0x000008, "Wrong alignment on BP_Input_Baer_C___1__");
static_assert(sizeof(BP_Input_Baer_C___1__) == 0x000478, "Wrong size on BP_Input_Baer_C___1__");
static_assert(offsetof(BP_Input_Baer_C___1__, Time) == 0x000000, "Member 'BP_Input_Baer_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_Input_Baer_C___1__::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_Input_Baer_C___1__::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000040, "Member 'BP_Input_Baer_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000041, "Member 'BP_Input_Baer_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, K2Node_MakeStruct_SInputCommand_1) == 0x000044, "Member 'BP_Input_Baer_C___1__::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'BP_Input_Baer_C___1__::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000068, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, K2Node_MakeStruct_SInputCommand_2) == 0x00006C, "Member 'BP_Input_Baer_C___1__::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetPriority_ReturnValue) == 0x000080, "Member 'BP_Input_Baer_C___1__::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000088, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillInfo_ReturnValue) == 0x000098, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetActivePriority_ReturnValue) == 0x000208, "Member 'BP_Input_Baer_C___1__::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00020C, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00020D, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x00020E, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Not_PreBool_ReturnValue) == 0x00020F, "Member 'BP_Input_Baer_C___1__::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000210, "Member 'BP_Input_Baer_C___1__::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000218, "Member 'BP_Input_Baer_C___1__::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x000228, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, ___wildcard_Variable) == 0x00022C, "Member 'BP_Input_Baer_C___1__::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_1) == 0x000240, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_2) == 0x000241, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, ___wildcard_Variable_1) == 0x000244, "Member 'BP_Input_Baer_C___1__::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, K2Node_MakeStruct_SInputCommand_3) == 0x000258, "Member 'BP_Input_Baer_C___1__::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000270, "Member 'BP_Input_Baer_C___1__::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc___Current_______) == 0x000280, "Member 'BP_Input_Baer_C___1__::CallFunc___Current_______' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetPriority_ReturnValue_1) == 0x000284, "Member 'BP_Input_Baer_C___1__::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000288, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000298, "Member 'BP_Input_Baer_C___1__::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_GetActivePriority_ReturnValue_1) == 0x000408, "Member 'BP_Input_Baer_C___1__::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00040C, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00040D, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanAND_ReturnValue_1) == 0x00040E, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Not_PreBool_ReturnValue_1) == 0x00040F, "Member 'BP_Input_Baer_C___1__::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000410, "Member 'BP_Input_Baer_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_3) == 0x000411, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc___Current________1) == 0x000414, "Member 'BP_Input_Baer_C___1__::CallFunc___Current________1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_4) == 0x000418, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000419, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_5) == 0x00041A, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000420, "Member 'BP_Input_Baer_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x000440, "Member 'BP_Input_Baer_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000441, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x000442, "Member 'BP_Input_Baer_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000443, "Member 'BP_Input_Baer_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc___1___ReturnValue) == 0x000444, "Member 'BP_Input_Baer_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanAND_ReturnValue_2) == 0x000458, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_BooleanOR_ReturnValue_6) == 0x000459, "Member 'BP_Input_Baer_C___1__::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000460, "Member 'BP_Input_Baer_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000470, "Member 'BP_Input_Baer_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.ý1	
// 0x0018 (0x0018 - 0x0000)
struct BP_Input_Baer_C___1___0 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Baer_C___1__) == 0x000004, "Wrong alignment on BP_Input_Baer_C___1__");
static_assert(sizeof(BP_Input_Baer_C___1__) == 0x000018, "Wrong size on BP_Input_Baer_C___1__");
static_assert(offsetof(BP_Input_Baer_C___1__, Time) == 0x000000, "Member 'BP_Input_Baer_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C___1__::ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.'Û	
// 0x0260 (0x0260 - 0x0000)
struct BP_Input_Baer_C_Func______17 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0068(0x0020)()
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0228(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Baer_C_____) == 0x000008, "Wrong alignment on BP_Input_Baer_C_____");
static_assert(sizeof(BP_Input_Baer_C_____) == 0x000260, "Wrong size on BP_Input_Baer_C_____");
static_assert(offsetof(BP_Input_Baer_C_____, Time) == 0x000000, "Member 'BP_Input_Baer_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000040, "Member 'BP_Input_Baer_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000044, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000068, "Member 'BP_Input_Baer_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue) == 0x000088, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00008C, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000090, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A0, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000210, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000215, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000216, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x000217, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000218, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000219, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00021A, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue) == 0x00021B, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x00021C, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00021D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x00021E, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x00021F, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000220, "Member 'BP_Input_Baer_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000221, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000224, "Member 'BP_Input_Baer_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable) == 0x000228, "Member 'BP_Input_Baer_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x00023C, "Member 'BP_Input_Baer_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000240, "Member 'BP_Input_Baer_C_____::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000248, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000258, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.Æ¬w
// 0x0018 (0x0018 - 0x0000)
struct BP_Input_Baer_C____w_6 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Baer_C____w) == 0x000004, "Wrong alignment on BP_Input_Baer_C____w");
static_assert(sizeof(BP_Input_Baer_C____w) == 0x000018, "Wrong size on BP_Input_Baer_C____w");
static_assert(offsetof(BP_Input_Baer_C____w, Time) == 0x000000, "Member 'BP_Input_Baer_C____w::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C____w, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C____w::ReturnValue' has a wrong offset!");

// Function BP_Input_Baer.BP_Input_Baer_C.Æ	
// 0x0478 (0x0478 - 0x0000)
struct BP_Input_Baer_C_Func______16 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0030(0x0020)()
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0054(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0078(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00B8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0234(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0268(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0290(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02B8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x042E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x042F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E[0x2];                                      // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0464(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Baer_C_____) == 0x000008, "Wrong alignment on BP_Input_Baer_C_____");
static_assert(sizeof(BP_Input_Baer_C_____) == 0x000478, "Wrong size on BP_Input_Baer_C_____");
static_assert(offsetof(BP_Input_Baer_C_____, Time) == 0x000000, "Member 'BP_Input_Baer_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Baer_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Baer_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000030, "Member 'BP_Input_Baer_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000050, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand) == 0x000054, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000078, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000090, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x0000A0, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000A4, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000A8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000B8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000228, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00022C, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00022D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00022E, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00022F, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000230, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000234, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000250, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000260, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000261, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000262, "Member 'BP_Input_Baer_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetDirectionState_ReturnValue) == 0x000263, "Member 'BP_Input_Baer_C_____::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000264, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000265, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x000268, "Member 'BP_Input_Baer_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000280, "Member 'BP_Input_Baer_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, ___wildcard_Variable_1) == 0x000290, "Member 'BP_Input_Baer_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002A4, "Member 'BP_Input_Baer_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002A8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002B8, "Member 'BP_Input_Baer_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x000428, "Member 'BP_Input_Baer_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00042C, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00042D, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x00042E, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00042F, "Member 'BP_Input_Baer_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000430, "Member 'BP_Input_Baer_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000431, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000432, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x000433, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000434, "Member 'BP_Input_Baer_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000438, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000448, "Member 'BP_Input_Baer_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000449, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00044A, "Member 'BP_Input_Baer_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00044B, "Member 'BP_Input_Baer_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x00044C, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x00044D, "Member 'BP_Input_Baer_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000450, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000460, "Member 'BP_Input_Baer_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Baer_C_____, CallFunc______ReturnValue) == 0x000464, "Member 'BP_Input_Baer_C_____::CallFunc______ReturnValue' has a wrong offset!");

}

