#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskFollowTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "TsTaskAbortImmediatelyBase_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTaskFollowTarget.TsTaskFollowTarget_C
// 0x0090 (0x0148 - 0x00B8)
class UTsTaskFollowTarget_C final : public UTsTaskAbortImmediatelyBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TsTaskFollowTarget_C;               // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Angle;                                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StandSpeed;                                        // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NavigationRadius;                                  // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxNavigationMillisecond;                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268C[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FollowPointName;                                   // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsShowCube;                                        // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_268D[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   Tags;                                              // 0x00F8(0x0010)(Edit, BlueprintVisible)
	class FString                                 WaitTimeName;                                      // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         WaitTime;                                          // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268E[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BeginTimeName;                                     // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 IsHasName;                                         // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsInTag;                                           // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TsTaskFollowTarget(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void GetPath(class AAIController* OwnerController, class APawn* ControlledPawn);
	void DrawCube(const struct FTransform& Transform, float Duration, float ColorValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTaskFollowTarget_C">();
	}
	static class UTsTaskFollowTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsTaskFollowTarget_C>();
	}
};
static_assert(alignof(UTsTaskFollowTarget_C) == 0x000008, "Wrong alignment on UTsTaskFollowTarget_C");
static_assert(sizeof(UTsTaskFollowTarget_C) == 0x000148, "Wrong size on UTsTaskFollowTarget_C");
static_assert(offsetof(UTsTaskFollowTarget_C, UberGraphFrame_TsTaskFollowTarget_C) == 0x0000B8, "Member 'UTsTaskFollowTarget_C::UberGraphFrame_TsTaskFollowTarget_C' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, Angle) == 0x0000C0, "Member 'UTsTaskFollowTarget_C::Angle' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, Length) == 0x0000C4, "Member 'UTsTaskFollowTarget_C::Length' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, Speed) == 0x0000C8, "Member 'UTsTaskFollowTarget_C::Speed' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, StandSpeed) == 0x0000CC, "Member 'UTsTaskFollowTarget_C::StandSpeed' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, Radius) == 0x0000D0, "Member 'UTsTaskFollowTarget_C::Radius' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, NavigationRadius) == 0x0000D4, "Member 'UTsTaskFollowTarget_C::NavigationRadius' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, MaxNavigationMillisecond) == 0x0000D8, "Member 'UTsTaskFollowTarget_C::MaxNavigationMillisecond' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, FollowPointName) == 0x0000E0, "Member 'UTsTaskFollowTarget_C::FollowPointName' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, IsShowCube) == 0x0000F0, "Member 'UTsTaskFollowTarget_C::IsShowCube' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, Tags) == 0x0000F8, "Member 'UTsTaskFollowTarget_C::Tags' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, WaitTimeName) == 0x000108, "Member 'UTsTaskFollowTarget_C::WaitTimeName' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, WaitTime) == 0x000118, "Member 'UTsTaskFollowTarget_C::WaitTime' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, BeginTimeName) == 0x000120, "Member 'UTsTaskFollowTarget_C::BeginTimeName' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, IsHasName) == 0x000130, "Member 'UTsTaskFollowTarget_C::IsHasName' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowTarget_C, IsInTag) == 0x000140, "Member 'UTsTaskFollowTarget_C::IsInTag' has a wrong offset!");

}

