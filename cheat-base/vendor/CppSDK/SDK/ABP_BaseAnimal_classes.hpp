#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseAnimal

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "EAnimalEcologicalState_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BaseAnimal.ABP_BaseAnimal_C
// 0x3320 (0x37B0 - 0x0490)
class UABP_BaseAnimal_C : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0498(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x04D0(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0608(0x0038)()
	struct FAnimNode_SightLock                    AnimGraphNode_SightLock;                           // 0x0640(0x01B8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x07F8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0818(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0838(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0970(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x09A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x09D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x09F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0AC0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0AE8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x0B78(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x0BB0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x0C40(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x0C78(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x0D08(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0D40(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x0DD0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0E08(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x0E98(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0ED0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x0F60(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0F98(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x1028(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x1060(0x0148)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x11A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x11D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x11F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x1220(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x1248(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x1270(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1298(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x12C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x12E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x1310(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1338(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1360(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x13B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x13D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x1400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1478(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x14A0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x1530(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1568(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x15C8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1600(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x1690(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x16C8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x1758(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1790(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x1820(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1858(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x18E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1920(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x19B0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x19E8(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1B30(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1B68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1B90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1BB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1BE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1C08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1C30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1C80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1CA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1CD0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1CF8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1D88(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1DC0(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1E20(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1E58(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1EE8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1F20(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1FB0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1FE8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2078(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x20B0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x2140(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2178(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2208(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x2240(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2388(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x23C0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2450(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2488(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2518(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2550(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x25E0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2618(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2648(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2680(0x0148)()
	uint8                                         Pad_27C8[0x8];                                     // 0x27C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x27D0(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2980(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x29A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x29D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x29F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2AE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2B10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2B38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2B60(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2B88(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2C18(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2C50(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2CE0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2D40(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2D68(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2E60(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2E98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2EC0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2F50(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2F88(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2FB8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2FF0(0x0148)()
	uint8                                         Pad_3138[0x8];                                     // 0x3138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3140(0x01B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x32F0(0x0060)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x3350(0x0070)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x33C0(0x0038)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x33F8(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x34B8(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x3578(0x00C0)()
	TArray<class UAnimSequence*>                  __h_Mn;                                            // 0x3638(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)
	class ATsBaseCharacter_C*                     _r__;                                              // 0x3648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 _rQ_S;                                             // 0x3650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimalEcologicalState                        __h___;                                            // 0x3658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ______;                                            // 0x3659(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x2];                                     // 0x365A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdleActionIndex;                                   // 0x365C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          IdleAnim;                                          // 0x3660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  __h_Mn_0;                                          // 0x3668(0x0010)(Edit, BlueprintVisible)
	int32                                         InteractActionIndex;                               // 0x3678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367C[0x4];                                     // 0x367C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          InteractAnim;                                      // 0x3680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightDirect;                                       // 0x3688(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESightLockMode                                SightLockMode;                                     // 0x3694(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3695[0x3];                                     // 0x3695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WalkRunParam;                                      // 0x3698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____p;                                             // 0x369C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHaveInput;                                        // 0x36A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIdleAction;                                       // 0x36A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _f_;                                               // 0x36A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _w_l_;                                             // 0x36A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          W__l;                                              // 0x36A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInteractAction;                                   // 0x36A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          _0__;                                              // 0x36A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          W_;                                                // 0x36A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSitDown;                                          // 0x36A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A9[0x7];                                     // 0x36A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UAnimSequence*> V___Mn;                                            // 0x36B0(0x0050)(Edit, BlueprintVisible)
	float                                         ActionTime;                                        // 0x3700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3704[0x4];                                     // 0x3704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSoftObjectPtr<class UPD_CharacterControllerData_C>> P_Mn;                                              // 0x3708(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class UAnimMontage*> _StarGh_Mn;                                        // 0x3758(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          __l_;                                              // 0x37A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __UI;                                              // 0x37A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGetDown;                                          // 0x37AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_BaseAnimal(int32 EntryPoint);
	void SystemUiEnd();
	void SystemUiStart();
	void FeedStart(const struct FGameplayTag& GameplayTag);
	void TakeOffStart();
	void AlertStart();
	void UnderAttackStart();
	void IdleStart();
	void InteractStart();
	void NoneStateStart();
	void StateMachineInitializationComplete();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void AnimNotify_Animal_UnderAttackEnd();
	void AnimNotify_Animal_AlertEnd();
	void AnimNotify_Animal_InteractActionEnd();
	void AnimNotify_Animal_IdleActionEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_2F01251B4B4FE9EAA39B3D9247C31675();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D33F159C49CF71493708D08A76E6E7CD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_BDCAAEE64FE7F1405D8B77AE820B11F2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49F87C244E0713CE630B39AA9A563674();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B5FA9C6847AB27EDF1D286A59C39E411();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DF17119740839C99CBDC5BB7A7ACF2FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0FDD922B45E34D982F8F85B15BF4E09D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B9970B3845ED2CF05C0CE2905CD1D9DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8A402BC24A8BC234FA1647AE139FAFCA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B7E4C2F643A351461514F3A4BB27FD57();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_C4B06AF44285B268E642C280316C25BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_274A99114D34CF70A381F6832E28301D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8D1F93424AA669264C48C4A3AD645001();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9C995D5F413AB0D5EEC5B0B25BCA0B99();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1BFEF6B2423BB23F3A743FA37CFEFB6E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1FA99C764B6E9143E9A2EBBC467023D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_7DF62BD6494255C57AF1CA838DF2F699();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E492EC01485375CFE000B0A5E11A31F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_00AF891944077B505E5628A5880DB881();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9E2813C546DB12830090D0B49CAFCF8A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_437CDAF94B84EB0EA0350A81D62C1333();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3C432C1A4EAC4B8EEC7FAA9810D7964C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3B0855934F908EBADF5C0E905BE5EBAD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_28773EEC4DFEA3865FF9E284E7CE5F47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DBE786244F0BB91CD41D8289371D7030();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_764CCFAC4D41871FBC3DA79A1C2573AB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_416429BC4584FF707D49B1BF83556BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1769F6104A02243DD5C6589592A29465();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0A62643941C9F2534B1AF99C24980E2C();
	void TakeOffEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49945F8B4DD298D2ED4AE0B5BD3BFF51();
	void AlertEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_AEAB655045E3052DFA6C2EB97F6BAEE4();
	void UnderAttackEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_F2118EA4482961323A4284A5C757A6D4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D76347B84F84143110867F87A063BC9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E971F2414D8A609D52454EBD86A29DDE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_6708632043AE1764C2B1A2BC8487CAA2();
	void IdleEnd();
	void InteractEnd();
	void NoneStateEnd();
	void ____h__0();
	void OnIdleStart();
	void ____h_();
	void __y___h_();
	void OnInteractStart();
	void ____();
	void OnAlertStart();
	void OnTakeOffStart();
	void OnUnderAttackStart();
	void _____H_();
	void _____o();
	void OnFeedStart(const struct FGameplayTag& GameplayTag);
	void OnSystemUIStart();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void __B_0(struct FPoseLink* Param___B_0);
	void ___B(const struct FPoseLink& ___e, struct FPoseLink* ___B_0);
	void __B(const struct FPoseLink& ____e, struct FPoseLink* __B_0);
	void GetCurrentActionTime(float* ActionTime_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BaseAnimal_C">();
	}
	static class UABP_BaseAnimal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BaseAnimal_C>();
	}
};
static_assert(alignof(UABP_BaseAnimal_C) == 0x000010, "Wrong alignment on UABP_BaseAnimal_C");
static_assert(sizeof(UABP_BaseAnimal_C) == 0x0037B0, "Wrong size on UABP_BaseAnimal_C");
static_assert(offsetof(UABP_BaseAnimal_C, UberGraphFrame) == 0x000490, "Member 'UABP_BaseAnimal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_3) == 0x000498, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedInputPose_1) == 0x0004D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_2) == 0x000608, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SightLock) == 0x000640, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SightLock' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LocalToComponentSpace) == 0x0007F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_ComponentToLocalSpace) == 0x000818, "Member 'UABP_BaseAnimal_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedInputPose) == 0x000838, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root_1) == 0x000970, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_52) == 0x0009A8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_51) == 0x0009D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_50) == 0x0009F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_49) == 0x000A20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_48) == 0x000A48, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_47) == 0x000A70, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_46) == 0x000A98, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_45) == 0x000AC0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_24) == 0x000AE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_31) == 0x000B78, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_23) == 0x000BB0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_30) == 0x000C40, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_22) == 0x000C78, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_29) == 0x000D08, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_21) == 0x000D40, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_28) == 0x000DD0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_20) == 0x000E08, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_27) == 0x000E98, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_19) == 0x000ED0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_26) == 0x000F60, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_18) == 0x000F98, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_25) == 0x001028, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_4) == 0x001060, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_44) == 0x0011A8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_43) == 0x0011D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_42) == 0x0011F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_41) == 0x001220, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_40) == 0x001248, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_39) == 0x001270, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_38) == 0x001298, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_37) == 0x0012C0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_36) == 0x0012E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_35) == 0x001310, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_34) == 0x001338, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_33) == 0x001360, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_32) == 0x001388, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_31) == 0x0013B0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_30) == 0x0013D8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_29) == 0x001400, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_28) == 0x001428, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_27) == 0x001450, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_26) == 0x001478, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_17) == 0x0014A0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_24) == 0x001530, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequenceEvaluator_1) == 0x001568, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_23) == 0x0015C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_16) == 0x001600, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_22) == 0x001690, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_15) == 0x0016C8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_21) == 0x001758, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_14) == 0x001790, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_20) == 0x001820, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_13) == 0x001858, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_19) == 0x0018E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_12) == 0x001920, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_18) == 0x0019B0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_3) == 0x0019E8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_17) == 0x001B30, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_25) == 0x001B68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_24) == 0x001B90, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_23) == 0x001BB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_22) == 0x001BE0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_21) == 0x001C08, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_20) == 0x001C30, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_19) == 0x001C58, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_18) == 0x001C80, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_17) == 0x001CA8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_16) == 0x001CD0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_11) == 0x001CF8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_16) == 0x001D88, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequenceEvaluator) == 0x001DC0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_15) == 0x001E20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_10) == 0x001E58, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_14) == 0x001EE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_9) == 0x001F20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_13) == 0x001FB0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_8) == 0x001FE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_12) == 0x002078, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_7) == 0x0020B0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_11) == 0x002140, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_6) == 0x002178, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_10) == 0x002208, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_2) == 0x002240, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_9) == 0x002388, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_5) == 0x0023C0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_8) == 0x002450, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_4) == 0x002488, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_7) == 0x002518, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_3) == 0x002550, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_6) == 0x0025E0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_UseCachedPose_1) == 0x002618, "Member 'UABP_BaseAnimal_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_5) == 0x002648, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine_1) == 0x002680, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SaveCachedPose_1) == 0x0027D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_15) == 0x002980, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_14) == 0x0029A8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_13) == 0x0029D0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_12) == 0x0029F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_11) == 0x002A20, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_10) == 0x002A48, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_9) == 0x002A70, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_8) == 0x002A98, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_7) == 0x002AC0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_6) == 0x002AE8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_5) == 0x002B10, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_4) == 0x002B38, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_3) == 0x002B60, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_2) == 0x002B88, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_4) == 0x002C18, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer_1) == 0x002C50, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_3) == 0x002CE0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_2) == 0x002D18, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult_1) == 0x002D40, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_BlendSpacePlayer) == 0x002D68, "Member 'UABP_BaseAnimal_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_2) == 0x002E60, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_TransitionResult) == 0x002E98, "Member 'UABP_BaseAnimal_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SequencePlayer) == 0x002EC0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult_1) == 0x002F50, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_UseCachedPose) == 0x002F88, "Member 'UABP_BaseAnimal_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateResult) == 0x002FB8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_StateMachine) == 0x002FF0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_SaveCachedPose) == 0x003140, "Member 'UABP_BaseAnimal_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Slot) == 0x0032F0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Inertialization) == 0x003350, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_Root) == 0x0033C0, "Member 'UABP_BaseAnimal_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0033F8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0034B8, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, AnimGraphNode_LinkedAnimLayer) == 0x003578, "Member 'UABP_BaseAnimal_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h_Mn) == 0x003638, "Member 'UABP_BaseAnimal_C::__h_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _r__) == 0x003648, "Member 'UABP_BaseAnimal_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _rQ_S) == 0x003650, "Member 'UABP_BaseAnimal_C::_rQ_S' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h___) == 0x003658, "Member 'UABP_BaseAnimal_C::__h___' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ______) == 0x003659, "Member 'UABP_BaseAnimal_C::______' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, IdleActionIndex) == 0x00365C, "Member 'UABP_BaseAnimal_C::IdleActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, IdleAnim) == 0x003660, "Member 'UABP_BaseAnimal_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __h_Mn_0) == 0x003668, "Member 'UABP_BaseAnimal_C::__h_Mn_0' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, InteractActionIndex) == 0x003678, "Member 'UABP_BaseAnimal_C::InteractActionIndex' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, InteractAnim) == 0x003680, "Member 'UABP_BaseAnimal_C::InteractAnim' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, SightDirect) == 0x003688, "Member 'UABP_BaseAnimal_C::SightDirect' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, SightLockMode) == 0x003694, "Member 'UABP_BaseAnimal_C::SightLockMode' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, WalkRunParam) == 0x003698, "Member 'UABP_BaseAnimal_C::WalkRunParam' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ____p) == 0x00369C, "Member 'UABP_BaseAnimal_C::____p' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bHaveInput) == 0x0036A0, "Member 'UABP_BaseAnimal_C::bHaveInput' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bIdleAction) == 0x0036A1, "Member 'UABP_BaseAnimal_C::bIdleAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _f_) == 0x0036A2, "Member 'UABP_BaseAnimal_C::_f_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _w_l_) == 0x0036A3, "Member 'UABP_BaseAnimal_C::_w_l_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, W__l) == 0x0036A4, "Member 'UABP_BaseAnimal_C::W__l' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bInteractAction) == 0x0036A5, "Member 'UABP_BaseAnimal_C::bInteractAction' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _0__) == 0x0036A6, "Member 'UABP_BaseAnimal_C::_0__' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, W_) == 0x0036A7, "Member 'UABP_BaseAnimal_C::W_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bSitDown) == 0x0036A8, "Member 'UABP_BaseAnimal_C::bSitDown' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, V___Mn) == 0x0036B0, "Member 'UABP_BaseAnimal_C::V___Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, ActionTime) == 0x003700, "Member 'UABP_BaseAnimal_C::ActionTime' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, P_Mn) == 0x003708, "Member 'UABP_BaseAnimal_C::P_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, _StarGh_Mn) == 0x003758, "Member 'UABP_BaseAnimal_C::_StarGh_Mn' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __l_) == 0x0037A8, "Member 'UABP_BaseAnimal_C::__l_' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, __UI) == 0x0037A9, "Member 'UABP_BaseAnimal_C::__UI' has a wrong offset!");
static_assert(offsetof(UABP_BaseAnimal_C, bGetDown) == 0x0037AA, "Member 'UABP_BaseAnimal_C::bGetDown' has a wrong offset!");

}

