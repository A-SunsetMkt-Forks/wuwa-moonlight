#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_KnifeSwordCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "EWeaponViewName_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_KnifeSwordCommon.ABP_KnifeSwordCommon_C
// 0x1700 (0x1AB0 - 0x03B0)
class UABP_KnifeSwordCommon_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B8(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x04B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x04E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0508(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0530(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x05A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x05D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0698(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x06C0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0750(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0788(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0818(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0850(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x08E0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0918(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x09A8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x09E0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0A70(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0AA8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0AE0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0B70(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0BA8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0C38(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0C70(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0D00(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0D38(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0E80(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0EE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0FF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1020(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1048(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1070(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1098(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x10C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x10E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1110(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1138(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x11C8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1200(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1290(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x12C8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1358(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1390(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1420(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1458(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x14E8(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1520(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1558(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x15E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1620(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x16B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x16E8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1778(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x17B0(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x18F8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1930(0x0148)()
	class ATsBaseCharacter_C*                     _r__;                                              // 0x1A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SMfh_4I_;                                          // 0x1A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _c_____yH;                                         // 0x1A84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponViewName                               UILb;                                              // 0x1A85(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A86[0x2];                                     // 0x1A86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsUiSceneRoleActor_C*                  UILb__;                                            // 0x1A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          __s_fh;                                            // 0x1A90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A91[0x3];                                     // 0x1A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Open_Delay;                                        // 0x1A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x1A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponOpen;                                        // 0x1A9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Fh___;                                             // 0x1A9D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUI;                                              // 0x1A9E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9F[0x1];                                     // 0x1A9F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Fh_4I_;                                            // 0x1AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_KnifeSwordCommon(int32 EntryPoint);
	void Set_Open_Delay();
	void Clear_Open_Delay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_C6778E804B46F910E60C4097B0E0682B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_4E56CE4F4FC40B67A815FA9E5121120B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_664AB34B4D035CEABB0C418E78AAF70C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_61EE4F984DCA22D42A72A98F6C4BFC8E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_0C0D79934A5A037639593FA2CB3E2E93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_854AF24B4A653398F1C33AA206F8D6D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_4DFF12FF4847EA4DB7F53A91C3131BD0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_B43171FB45751BE56495909E0DABD355();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_F3A465D5478E4A2437A6B98BAAE96C91();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_1C7BA9E1439EBB8F10A3DD8FBD4EBB45();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_DDA8FE174DA35F32201ECF8D1F0AC000();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_1104B3D34ABB146519ADB59C07CE33E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_F22DFB8C48938E608C8B4FAB96176238();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_D59A6A4E4DB9956F52F3E6A2AE303BB0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_41012E9C47286273648C7D9F6FF2597E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_E00BEE7745981B76F40C6BA1307CF8A9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_63CB659041245489CD552B98E7BBD9A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_AFC942E14466B76135991F9A059E61CC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_D8AA1FAD4BBC9587AE3579B81C8F6888();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_2C47528C4EBC1C3AA6B611BA1D48DD4E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_41EC7C5648974B735550789F6FAE749B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_9BB528CB4D57D317414E1C95FF134290();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_KnifeSwordCommon_C">();
	}
	static class UABP_KnifeSwordCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_KnifeSwordCommon_C>();
	}
};
static_assert(alignof(UABP_KnifeSwordCommon_C) == 0x000010, "Wrong alignment on UABP_KnifeSwordCommon_C");
static_assert(sizeof(UABP_KnifeSwordCommon_C) == 0x001AB0, "Wrong size on UABP_KnifeSwordCommon_C");
static_assert(offsetof(UABP_KnifeSwordCommon_C, UberGraphFrame) == 0x0003B0, "Member 'UABP_KnifeSwordCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_Root) == 0x0003B8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_33) == 0x0003F0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_32) == 0x000418, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_31) == 0x000440, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_30) == 0x000468, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_29) == 0x000490, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_28) == 0x0004B8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_27) == 0x0004E0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_26) == 0x000508, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_25) == 0x000530, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_24) == 0x000558, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_23) == 0x000580, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_22) == 0x0005A8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_21) == 0x0005D0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_20) == 0x0005F8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_19) == 0x000620, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_18) == 0x000648, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_17) == 0x000670, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_16) == 0x000698, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_15) == 0x0006C0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_19) == 0x000750, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_14) == 0x000788, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_18) == 0x000818, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_13) == 0x000850, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_17) == 0x0008E0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_12) == 0x000918, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_16) == 0x0009A8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_11) == 0x0009E0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_15) == 0x000A70, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_14) == 0x000AA8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_10) == 0x000AE0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_13) == 0x000B70, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_9) == 0x000BA8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_12) == 0x000C38, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_8) == 0x000C70, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_11) == 0x000D00, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateMachine_2) == 0x000D38, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_10) == 0x000E80, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_15) == 0x000EB8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_14) == 0x000EE0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_13) == 0x000F08, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_12) == 0x000F30, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_11) == 0x000F58, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_10) == 0x000F80, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_9) == 0x000FA8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_8) == 0x000FD0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_7) == 0x000FF8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_6) == 0x001020, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_5) == 0x001048, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_4) == 0x001070, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_3) == 0x001098, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_2) == 0x0010C0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult_1) == 0x0010E8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_TransitionResult) == 0x001110, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_7) == 0x001138, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_9) == 0x0011C8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_6) == 0x001200, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_8) == 0x001290, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_5) == 0x0012C8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_7) == 0x001358, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_4) == 0x001390, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_6) == 0x001420, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_3) == 0x001458, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_5) == 0x0014E8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_4) == 0x001520, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_2) == 0x001558, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_3) == 0x0015E8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer_1) == 0x001620, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_2) == 0x0016B0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_SequencePlayer) == 0x0016E8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult_1) == 0x001778, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateMachine_1) == 0x0017B0, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateResult) == 0x0018F8, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, AnimGraphNode_StateMachine) == 0x001930, "Member 'UABP_KnifeSwordCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, _r__) == 0x001A78, "Member 'UABP_KnifeSwordCommon_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, SMfh_4I_) == 0x001A80, "Member 'UABP_KnifeSwordCommon_C::SMfh_4I_' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, _c_____yH) == 0x001A84, "Member 'UABP_KnifeSwordCommon_C::_c_____yH' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, UILb) == 0x001A85, "Member 'UABP_KnifeSwordCommon_C::UILb' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, UILb__) == 0x001A88, "Member 'UABP_KnifeSwordCommon_C::UILb__' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, __s_fh) == 0x001A90, "Member 'UABP_KnifeSwordCommon_C::__s_fh' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, Open_Delay) == 0x001A94, "Member 'UABP_KnifeSwordCommon_C::Open_Delay' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, Delta_Time) == 0x001A98, "Member 'UABP_KnifeSwordCommon_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, WeaponOpen) == 0x001A9C, "Member 'UABP_KnifeSwordCommon_C::WeaponOpen' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, Fh___) == 0x001A9D, "Member 'UABP_KnifeSwordCommon_C::Fh___' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, IsUI) == 0x001A9E, "Member 'UABP_KnifeSwordCommon_C::IsUI' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_C, Fh_4I_) == 0x001AA0, "Member 'UABP_KnifeSwordCommon_C::Fh_4I_' has a wrong offset!");

}

