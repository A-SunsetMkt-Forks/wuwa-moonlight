#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalGI_LaunchScene

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.ExecuteUbergraph_BP_GlobalGI_LaunchScene
// 0x0030 (0x0030 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1749[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InName;                               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevel*                                 K2Node_Event_InUILevel;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentTime;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene) == 0x000030, "Wrong size on BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, EntryPoint) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, K2Node_Event_InName) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, K2Node_Event_InUILevel) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::K2Node_Event_InUILevel' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, K2Node_Event_DeltaTime_1) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::K2Node_Event_DeltaTime_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, K2Node_Event_DeltaTime) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene, K2Node_Event_CurrentTime) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_ExecuteUbergraph_BP_GlobalGI_LaunchScene::K2Node_Event_CurrentTime' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.OnKuroSetRuntimeTime
// 0x0004 (0x0004 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime final
{
public:
	float                                         CurrentTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime) == 0x000004, "Wrong size on BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime, CurrentTime) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_OnKuroSetRuntimeTime::CurrentTime' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.OnKuroTickEditor
// 0x0004 (0x0004 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_OnKuroTickEditor final
{
public:
	float                                         Param_DeltaTime;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_OnKuroTickEditor) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_OnKuroTickEditor");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_OnKuroTickEditor) == 0x000004, "Wrong size on BP_GlobalGI_LaunchScene_C_OnKuroTickEditor");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_OnKuroTickEditor, Param_DeltaTime) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_OnKuroTickEditor::Param_DeltaTime' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.OnKuroTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_OnKuroTick final
{
public:
	float                                         Param_DeltaTime;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_OnKuroTick) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_OnKuroTick");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_OnKuroTick) == 0x000004, "Wrong size on BP_GlobalGI_LaunchScene_C_OnKuroTick");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_OnKuroTick, Param_DeltaTime) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_OnKuroTick::Param_DeltaTime' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.OnKuroStartUI
// 0x0018 (0x0018 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_OnKuroStartUI final
{
public:
	class FString                                 InName;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ULevel*                                 InUILevel;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_OnKuroStartUI) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_OnKuroStartUI");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_OnKuroStartUI) == 0x000018, "Wrong size on BP_GlobalGI_LaunchScene_C_OnKuroStartUI");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_OnKuroStartUI, InName) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_OnKuroStartUI::InName' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_OnKuroStartUI, InUILevel) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_OnKuroStartUI::InUILevel' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateGIData
// 0x0010 (0x0010 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateGIData final
{
public:
	struct FVector4                               SunPositon;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateGIData) == 0x000010, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateGIData");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateGIData) == 0x000010, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateGIData");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateGIData, SunPositon) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateGIData::SunPositon' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateFog
// 0x0060 (0x0060 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateFog final
{
public:
	struct FLinearColor                           NewLocalVar_1;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174B[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0050(0x0010)(NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateFog) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateFog");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateFog) == 0x000060, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateFog");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, NewLocalVar_1) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, CallFunc_IsValid_ReturnValue_3) == 0x00004A, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateFog, K2Node_MakeStruct_WeightedBlendable) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_UpdateFog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get2SkyboxLerpWeight
// 0x0034 (0x0034 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight final
{
public:
	float                                         StartSetting;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndSetting;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight) == 0x000034, "Wrong size on BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, StartSetting) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::StartSetting' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, EndSetting) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::EndSetting' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CurrentTime) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, Weight) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::Weight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, ___) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::___' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00002C, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight, CallFunc_Abs_ReturnValue_1) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_Get2SkyboxLerpWeight::CallFunc_Abs_ReturnValue_1' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateLensFlares
// 0x0058 (0x0058 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateLensFlares final
{
public:
	bool                                          ___bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1750[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_1;             // 0x0040(0x0010)(NoDestructor)
	EKuroFeatureLevel                             CallFunc_GetWorldFeatureLevel_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateLensFlares");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares) == 0x000058, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateLensFlares");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, ___bool_Variable) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, K2Node_Select_Default) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, K2Node_MakeStruct_WeightedBlendable) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_IsValid_ReturnValue_2) == 0x00003A, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, K2Node_MakeStruct_WeightedBlendable_1) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::K2Node_MakeStruct_WeightedBlendable_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_GetWorldFeatureLevel_ReturnValue) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_GetWorldFeatureLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLensFlares, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLensFlares::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateWind
// 0x0060 (0x0060 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateWind final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateWind) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateWind");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateWind) == 0x000060, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateWind");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_GetRightVector_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_GetForwardVector_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_Normal_ReturnValue) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_Normal_ReturnValue_1) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00003C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateWind, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateWind::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Is Day
// 0x000C (0x000C - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Is_Day final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1751[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTrulyTime_CurTime;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Is_Day) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Is_Day");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Is_Day) == 0x00000C, "Wrong size on BP_GlobalGI_LaunchScene_C_Is_Day");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Is_Day, Result) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Is_Day::Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Is_Day, CallFunc_GetTrulyTime_CurTime) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_Is_Day::CallFunc_GetTrulyTime_CurTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Is_Day, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_Is_Day::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get Light Direction
// 0x003C (0x003C - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get_Light_Direction final
{
public:
	struct FVector                                SunLight;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NightLight;                                        // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get_Light_Direction");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction) == 0x00003C, "Wrong size on BP_GlobalGI_LaunchScene_C_Get_Light_Direction");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction, SunLight) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Direction::SunLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction, NightLight) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Direction::NightLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction, CallFunc_GetForwardVector_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Direction::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction, CallFunc_Normal_ReturnValue) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Direction::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Direction, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Direction::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get Light Rotator
// 0x003C (0x003C - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get_Light_Rotator final
{
public:
	struct FRotator                               SunLight;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NightLight;                                        // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Get_Light_Direction_SunLight;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Light_Direction_NightLight;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get_Light_Rotator");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator) == 0x00003C, "Wrong size on BP_GlobalGI_LaunchScene_C_Get_Light_Rotator");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator, SunLight) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Rotator::SunLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator, NightLight) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Rotator::NightLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator, CallFunc_Get_Light_Direction_SunLight) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Rotator::CallFunc_Get_Light_Direction_SunLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator, CallFunc_Get_Light_Direction_NightLight) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Rotator::CallFunc_Get_Light_Direction_NightLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Light_Rotator, CallFunc_MakeRotFromX_ReturnValue) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_Get_Light_Rotator::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get Scene Light Direction
// 0x0018 (0x0018 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction final
{
public:
	struct FVector                                LightDir;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction) == 0x000018, "Wrong size on BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction, LightDir) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction::LightDir' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Direction::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get Scene Light Rotator
// 0x0018 (0x0018 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator final
{
public:
	struct FRotator                               SunLight;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NightLight;                                        // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator) == 0x000018, "Wrong size on BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator, SunLight) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator::SunLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator, NightLight) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get_Scene_Light_Rotator::NightLight' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateSkyLight
// 0x0010 (0x0010 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateSkyLight final
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateSkyLight) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateSkyLight");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateSkyLight) == 0x000010, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateSkyLight");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyLight, LightColor) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyLight::LightColor' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.CalculateLightDirection
// 0x0058 (0x0058 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_CalculateLightDirection final
{
public:
	float                                         Vertical;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewParam;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetLightDirectionFromVH_Result;           // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_CalculateLightDirection");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection) == 0x000058, "Wrong size on BP_GlobalGI_LaunchScene_C_CalculateLightDirection");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, Vertical) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::Vertical' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, Horizontal) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::Horizontal' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, Time) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::Time' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, NewParam) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::NewParam' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_GetLightDirectionFromVH_Result) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_GetLightDirectionFromVH_Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_GetUpVector_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_GetForwardVector_ReturnValue) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_RotateAngleAxis_ReturnValue) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalculateLightDirection, CallFunc_MakeRotFromX_ReturnValue) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_CalculateLightDirection::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.CalulateLightDirectionWithLimit
// 0x0090 (0x0090 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit final
{
public:
	float                                         V;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         H;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewParam;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TempAngle;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1752[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1753[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1754[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetLightDirectionFromVH_Result;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit) == 0x000090, "Wrong size on BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, V) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::V' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, H) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::H' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, Time) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::Time' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, NewParam) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::NewParam' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, TempAngle) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::TempAngle' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_InRange_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00002C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_GetLightDirectionFromVH_Result) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_GetLightDirectionFromVH_Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_GetUpVector_ReturnValue) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_MapRangeClamped_ReturnValue_2) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_RotateAngleAxis_ReturnValue) == 0x00005C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_MakeRotFromX_ReturnValue) == 0x000068, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit, CallFunc_Less_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_GlobalGI_LaunchScene_C_CalulateLightDirectionWithLimit::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.InitFeature
// 0x0001 (0x0001 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_InitFeature final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_InitFeature) == 0x000001, "Wrong alignment on BP_GlobalGI_LaunchScene_C_InitFeature");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_InitFeature) == 0x000001, "Wrong size on BP_GlobalGI_LaunchScene_C_InitFeature");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_InitFeature, NewLocalVar_0) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_InitFeature::NewLocalVar_0' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.GetViewLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_GetViewLocation final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Suc;                                               // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCameraLocation_Success;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1755[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_Location;               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLevelEditorCameraLocationAndForward_Position; // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLevelEditorCameraLocationAndForward_Rotation; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_GetViewLocation) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_GetViewLocation");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_GetViewLocation) == 0x000038, "Wrong size on BP_GlobalGI_LaunchScene_C_GetViewLocation");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, WorldPosition) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, Suc) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::Suc' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, CallFunc_GetCameraLocation_Success) == 0x00000D, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::CallFunc_GetCameraLocation_Success' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, CallFunc_GetCameraLocation_Location) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::CallFunc_GetCameraLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, CallFunc_GetLevelEditorCameraLocationAndForward_Position) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::CallFunc_GetLevelEditorCameraLocationAndForward_Position' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, CallFunc_GetLevelEditorCameraLocationAndForward_Rotation) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::CallFunc_GetLevelEditorCameraLocationAndForward_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetViewLocation, CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_GetViewLocation::CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateTime
// 0x0034 (0x0034 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateTime final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateTime) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateTime");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateTime) == 0x000034, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateTime");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, ___int_Variable) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_UpdateTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateMainLight
// 0x0010 (0x0010 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateMainLight final
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateMainLight) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateMainLight");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateMainLight) == 0x000010, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateMainLight");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateMainLight, LightColor) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateMainLight::LightColor' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Update Main Light Direction
// 0x0380 (0x0380 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1756[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1757[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTrulyTime_CurTime;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTrulyTime_CurTime_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalulateLightDirectionWithLimit_NewParam; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_CalculateLightDirection_NewParam;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Day_Result;                            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1758[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcTODTimeFactor_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLightDirectionFromVH_Result;           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1759[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0084(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175A[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x01C0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0254(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EKuroFeatureLevel                             CallFunc_GetWorldFeatureLevel_ReturnValue;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175B[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x02EC(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction) == 0x000380, "Wrong size on BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetForwardVector_ReturnValue_1) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Dot_VectorVector_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_DegAcos_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000033, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetTrulyTime_CurTime) == 0x00003C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetTrulyTime_CurTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetTrulyTime_CurTime_1) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetTrulyTime_CurTime_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_CalulateLightDirectionWithLimit_NewParam) == 0x000044, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_CalulateLightDirectionWithLimit_NewParam' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_CalculateLightDirection_NewParam) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_CalculateLightDirection_NewParam' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Is_Day_Result) == 0x00005C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Is_Day_Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_BreakVector2D_X) == 0x000060, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_BreakVector2D_Y) == 0x000064, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_CalcTODTimeFactor_ReturnValue) == 0x000068, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_CalcTODTimeFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetLightDirectionFromVH_Result) == 0x000074, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetLightDirectionFromVH_Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000084, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetForwardVector_ReturnValue_2) == 0x00011C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Normal_ReturnValue) == 0x000128, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetForwardVector_ReturnValue_3) == 0x000134, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000140, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Normal_ReturnValue_1) == 0x000150, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_SelectVector_ReturnValue) == 0x00015C, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000168, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000178, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetLightColor_ReturnValue) == 0x000188, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetForwardVector_ReturnValue_4) == 0x000198, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Normal_ReturnValue_2) == 0x0001A4, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x0001B0, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0001C0, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000254, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_GetWorldFeatureLevel_ReturnValue) == 0x0002E8, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_GetWorldFeatureLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E9, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0002EC, "Member 'BP_GlobalGI_LaunchScene_C_Update_Main_Light_Direction::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateLightParameters
// 0x0040 (0x0040 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateLightParameters final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175D[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters) == 0x000010, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateLightParameters");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters) == 0x000040, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateLightParameters");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightParameters::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightParameters::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightParameters, K2Node_MakeStruct_Vector4) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightParameters::K2Node_MakeStruct_Vector4' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.GetLightDirectionFromVH
// 0x0020 (0x0020 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH final
{
public:
	float                                         Vertical;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Result;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH) == 0x000020, "Wrong size on BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH, Vertical) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH::Vertical' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH, Horizontal) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH::Horizontal' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH, Result) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH::Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_GetLightDirectionFromVH::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateLightShaft
// 0x0003 (0x0003 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateLightShaft final
{
public:
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateLightShaft) == 0x000001, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateLightShaft");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateLightShaft) == 0x000003, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateLightShaft");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightShaft, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightShaft::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightShaft, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000001, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightShaft::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightShaft, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightShaft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Start3DUIScene
// 0x0010 (0x0010 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Start3DUIScene final
{
public:
	class UPDA_GIUIData_C*                        UIGIData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Start3DUIScene) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Start3DUIScene");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Start3DUIScene) == 0x000010, "Wrong size on BP_GlobalGI_LaunchScene_C_Start3DUIScene");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Start3DUIScene, UIGIData) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Start3DUIScene::UIGIData' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Start3DUIScene, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_Start3DUIScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Start3DUIScene, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_GlobalGI_LaunchScene_C_Start3DUIScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Start3DUIScene, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_GlobalGI_LaunchScene_C_Start3DUIScene::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.SetUIComponentsVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility) == 0x000001, "Wrong alignment on BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility) == 0x000001, "Wrong size on BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility, IsVisible) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_SetUIComponentsVisibility::IsVisible' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Set All Components States
// 0x0001 (0x0001 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Set_All_Components_States final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Set_All_Components_States) == 0x000001, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Set_All_Components_States");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Set_All_Components_States) == 0x000001, "Wrong size on BP_GlobalGI_LaunchScene_C_Set_All_Components_States");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Set_All_Components_States, IsEnable) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Set_All_Components_States::IsEnable' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateSkyDome
// 0x0068 (0x0068 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateSkyDome final
{
public:
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175E[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetSkyboxDMI_DMIRet;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateSkyDome");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome) == 0x000068, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateSkyDome");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_GetRightVector_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_GetUpVector_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000044, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_GetSkyboxDMI_DMIRet) == 0x000058, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_GetSkyboxDMI_DMIRet' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateSkyDome, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_GlobalGI_LaunchScene_C_UpdateSkyDome::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Get Total TOD Time Elapsed
// 0x0010 (0x0010 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTrulyTime_CurTime;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed) == 0x000010, "Wrong size on BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed, Time) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed::Time' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed, CallFunc_GetTrulyTime_CurTime) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed::CallFunc_GetTrulyTime_CurTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_Get_Total_TOD_Time_Elapsed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateLightMPC
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateLightMPC final
{
public:
	bool                                          CallFunc_Is_Day_Result;                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateLightMPC");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC) == 0x0000A8, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateLightMPC");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Is_Day_Result) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Is_Day_Result' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_GetForwardVector_ReturnValue) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_GetForwardVector_ReturnValue_1) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Normal_ReturnValue) == 0x00001C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Normal_ReturnValue_1) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_SelectVector_ReturnValue) == 0x000044, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000060, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_GetLightColor_ReturnValue) == 0x000070, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_GetForwardVector_ReturnValue_2) == 0x000080, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Normal_ReturnValue_2) == 0x00008C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateLightMPC, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000098, "Member 'BP_GlobalGI_LaunchScene_C_UpdateLightMPC::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateDayNightDataLayer
// 0x001C (0x001C - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer) == 0x00001C, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_GlobalGI_LaunchScene_C_UpdateDayNightDataLayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.GetTrulyTime
// 0x0008 (0x0008 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_GetTrulyTime final
{
public:
	float                                         CurTime;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGITime_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_GetTrulyTime) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_GetTrulyTime");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_GetTrulyTime) == 0x000008, "Wrong size on BP_GlobalGI_LaunchScene_C_GetTrulyTime");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTrulyTime, CurTime) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_GetTrulyTime::CurTime' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTrulyTime, CallFunc_GetGITime_ReturnValue) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_GetTrulyTime::CallFunc_GetGITime_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.GetSkyboxDMI
// 0x0020 (0x0020 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_GetSkyboxDMI final
{
public:
	class UMaterialInstanceDynamic*               DMIRet;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1760[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI) == 0x000008, "Wrong alignment on BP_GlobalGI_LaunchScene_C_GetSkyboxDMI");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI) == 0x000020, "Wrong size on BP_GlobalGI_LaunchScene_C_GetSkyboxDMI");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI, DMIRet) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_GetSkyboxDMI::DMIRet' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_GetSkyboxDMI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_GetSkyboxDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_GetSkyboxDMI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetSkyboxDMI, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'BP_GlobalGI_LaunchScene_C_GetSkyboxDMI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.EulerToForward
// 0x0040 (0x0040 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_EulerToForward final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  CallFunc_Quat_MakeFromEuler_ReturnValue;           // 0x0020(0x0010)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Quat_VectorForward_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_EulerToForward) == 0x000010, "Wrong alignment on BP_GlobalGI_LaunchScene_C_EulerToForward");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_EulerToForward) == 0x000040, "Wrong size on BP_GlobalGI_LaunchScene_C_EulerToForward");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, Pitch) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::Pitch' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, Yaw) == 0x000004, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::Yaw' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, ReturnValue) == 0x000008, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, CallFunc_Quat_MakeFromEuler_ReturnValue) == 0x000020, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::CallFunc_Quat_MakeFromEuler_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_EulerToForward, CallFunc_Quat_VectorForward_ReturnValue) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_EulerToForward::CallFunc_Quat_VectorForward_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.Clamp Luminance
// 0x006C (0x006C - 0x0000)
struct BP_GlobalGI_LaunchScene_C_Clamp_Luminance final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RGB2HSP_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSP2RGB_ReturnValue;                      // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_Clamp_Luminance");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance) == 0x00006C, "Wrong size on BP_GlobalGI_LaunchScene_C_Clamp_Luminance");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, InColor) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::InColor' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, Min) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::Min' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, Max) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::Max' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_RGB2HSP_ReturnValue) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_RGB2HSP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_BreakColor_R) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_BreakColor_G) == 0x00003C, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_BreakColor_B) == 0x000040, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_BreakColor_A) == 0x000044, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_MakeColor_ReturnValue) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_Clamp_Luminance, CallFunc_HSP2RGB_ReturnValue) == 0x00005C, "Member 'BP_GlobalGI_LaunchScene_C_Clamp_Luminance::CallFunc_HSP2RGB_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.GetTODCharacterLighting
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting final
{
public:
	struct FLinearColor                           MainLight;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MainLightIntensity;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_SkyLight;                                    // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyLightIntensity;                                 // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FrontSideLight;                                    // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackSideLight;                                     // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Clamp_Luminance_ReturnValue;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Clamp_Luminance_ReturnValue_1;            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting) == 0x000004, "Wrong alignment on BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting) == 0x0000B0, "Wrong size on BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, MainLight) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::MainLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, MainLightIntensity) == 0x000010, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::MainLightIntensity' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, Param_SkyLight) == 0x000014, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::Param_SkyLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, SkyLightIntensity) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::SkyLightIntensity' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, FrontSideLight) == 0x000028, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::FrontSideLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, BackSideLight) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::BackSideLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000060, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Clamp_Luminance_ReturnValue) == 0x000070, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Clamp_Luminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Clamp_Luminance_ReturnValue_1) == 0x000080, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Clamp_Luminance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000090, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'BP_GlobalGI_LaunchScene_C_GetTODCharacterLighting::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");

// Function BP_GlobalGI_LaunchScene.BP_GlobalGI_LaunchScene_C.UpdateCharacterGI
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GlobalGI_LaunchScene_C_UpdateCharacterGI final
{
public:
	struct FVector                                CallFunc_Get_Scene_Light_Direction_LightDir;       // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_EulerToForward_ReturnValue;               // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1761[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTODCharacterLighting_FrontSideLight;   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTODCharacterLighting_BackSideLight;    // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI) == 0x000010, "Wrong alignment on BP_GlobalGI_LaunchScene_C_UpdateCharacterGI");
static_assert(sizeof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI) == 0x0000E0, "Wrong size on BP_GlobalGI_LaunchScene_C_UpdateCharacterGI");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Get_Scene_Light_Direction_LightDir) == 0x000000, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Get_Scene_Light_Direction_LightDir' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Normal_ReturnValue) == 0x00000C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_MakeRotFromX_ReturnValue) == 0x000024, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_EulerToForward_ReturnValue) == 0x00003C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_EulerToForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Lerp_ReturnValue) == 0x000054, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, K2Node_MakeStruct_Vector4) == 0x000060, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Lerp_ReturnValue_1) == 0x000070, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_GetTODCharacterLighting_FrontSideLight) == 0x000074, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_GetTODCharacterLighting_FrontSideLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_GetTODCharacterLighting_BackSideLight) == 0x000084, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_GetTODCharacterLighting_BackSideLight' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000094, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_LinearColorLerp_ReturnValue) == 0x0000A4, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000B4, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalGI_LaunchScene_C_UpdateCharacterGI, CallFunc_LinearColorLerp_ReturnValue_2) == 0x0000C4, "Member 'BP_GlobalGI_LaunchScene_C_UpdateCharacterGI::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");

}

