#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Common_NPC_Seq

#include "Basic.hpp"

#include "KuroAnim_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Common_NPC_Seq.ABP_Common_NPC_Seq_C
// 0x0760 (0x0B10 - 0x03B0)
class UABP_Common_NPC_Seq_C final : public UAnimInstance
{
public:
	uint8                                         Pad_29C7[0x8];                                     // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B8(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03F0(0x0138)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0528(0x0060)()
	struct FAnimNode_CurveSource                  AnimGraphNode_CurveSource;                         // 0x0588(0x0040)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x05C8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x05E8(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x06F8(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0808(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0918(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0938(0x0060)()
	struct FAnimNode_CurveFix                     AnimGraphNode_CurveFix;                            // 0x0998(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09C8(0x0060)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves_1;                     // 0x0A28(0x0060)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves;                       // 0x0A88(0x0060)()
	struct FRotator                               Add_Bip_001Head;                                   // 0x0AE8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001Neck;                                   // 0x0AF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001Spine_2;                                // 0x0B00(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MouthAlpha;                                        // 0x0B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Common_NPC_Seq(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Common_NPC_Seq_C">();
	}
	static class UABP_Common_NPC_Seq_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Common_NPC_Seq_C>();
	}
};
static_assert(alignof(UABP_Common_NPC_Seq_C) == 0x000010, "Wrong alignment on UABP_Common_NPC_Seq_C");
static_assert(sizeof(UABP_Common_NPC_Seq_C) == 0x000B10, "Wrong size on UABP_Common_NPC_Seq_C");
static_assert(offsetof(UABP_Common_NPC_Seq_C, UberGraphFrame) == 0x0003B0, "Member 'UABP_Common_NPC_Seq_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_Root) == 0x0003B8, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_LinkedInputPose) == 0x0003F0, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_Slot_2) == 0x000528, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_CurveSource) == 0x000588, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_CurveSource' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_LocalToComponentSpace) == 0x0005C8, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_ModifyBone_2) == 0x0005E8, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_ModifyBone_1) == 0x0006F8, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_ModifyBone) == 0x000808, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_ComponentToLocalSpace) == 0x000918, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_Slot_1) == 0x000938, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_CurveFix) == 0x000998, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_CurveFix' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_Slot) == 0x0009C8, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_CombineCurves_1) == 0x000A28, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_CombineCurves_1' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, AnimGraphNode_CombineCurves) == 0x000A88, "Member 'UABP_Common_NPC_Seq_C::AnimGraphNode_CombineCurves' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, Add_Bip_001Head) == 0x000AE8, "Member 'UABP_Common_NPC_Seq_C::Add_Bip_001Head' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, Add_Bip_001Neck) == 0x000AF4, "Member 'UABP_Common_NPC_Seq_C::Add_Bip_001Neck' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, Add_Bip_001Spine_2) == 0x000B00, "Member 'UABP_Common_NPC_Seq_C::Add_Bip_001Spine_2' has a wrong offset!");
static_assert(offsetof(UABP_Common_NPC_Seq_C, MouthAlpha) == 0x000B0C, "Member 'UABP_Common_NPC_Seq_C::MouthAlpha' has a wrong offset!");

}

