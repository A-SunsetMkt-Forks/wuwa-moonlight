#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_KnifeSwordCommon_PC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_KnifeSwordCommon_PC.ABP_KnifeSwordCommon_PC_C
// 0x03A0 (0x0750 - 0x03B0)
class UABP_KnifeSwordCommon_PC_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B8(0x0038)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x03F0(0x0020)()
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_LinkedAnimGraph;                     // 0x0410(0x00A8)()
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysicsGroup           AnimGraphNode_KawaiiPhysicsGroup;                  // 0x04C0(0x0270)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0730(0x0020)()

public:
	void ExecuteUbergraph_ABP_KnifeSwordCommon_PC(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_KnifeSwordCommon_PC_C">();
	}
	static class UABP_KnifeSwordCommon_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_KnifeSwordCommon_PC_C>();
	}
};
static_assert(alignof(UABP_KnifeSwordCommon_PC_C) == 0x000010, "Wrong alignment on UABP_KnifeSwordCommon_PC_C");
static_assert(sizeof(UABP_KnifeSwordCommon_PC_C) == 0x000750, "Wrong size on UABP_KnifeSwordCommon_PC_C");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, UberGraphFrame) == 0x0003B0, "Member 'UABP_KnifeSwordCommon_PC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, AnimGraphNode_Root) == 0x0003B8, "Member 'UABP_KnifeSwordCommon_PC_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, AnimGraphNode_LocalToComponentSpace) == 0x0003F0, "Member 'UABP_KnifeSwordCommon_PC_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, AnimGraphNode_LinkedAnimGraph) == 0x000410, "Member 'UABP_KnifeSwordCommon_PC_C::AnimGraphNode_LinkedAnimGraph' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, AnimGraphNode_KawaiiPhysicsGroup) == 0x0004C0, "Member 'UABP_KnifeSwordCommon_PC_C::AnimGraphNode_KawaiiPhysicsGroup' has a wrong offset!");
static_assert(offsetof(UABP_KnifeSwordCommon_PC_C, AnimGraphNode_ComponentToLocalSpace) == 0x000730, "Member 'UABP_KnifeSwordCommon_PC_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");

}

