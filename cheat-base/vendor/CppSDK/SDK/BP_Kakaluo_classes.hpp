#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Kakaluo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Kakaluo.BP_Kakaluo_C
// 0x0050 (0x07D0 - 0x0780)
class ABP_Kakaluo_C final : public ATsBaseCharacter_C
{
public:
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Kakaluo_C;                       // 0x0778(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKuroAdjustableCapsuleComponent*        Bip001LThighTwist;                                 // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001RThighTwist;                                 // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001Spine2;                                      // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponCase0;                                       // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase1;                                        // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase2;                                        // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ___s;                                              // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewVar_0;                                          // 0x07B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Kakaluo(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void FightCommand(bool IsInAir);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Kakaluo_C">();
	}
	static class ABP_Kakaluo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Kakaluo_C>();
	}
};
static_assert(alignof(ABP_Kakaluo_C) == 0x000010, "Wrong alignment on ABP_Kakaluo_C");
static_assert(sizeof(ABP_Kakaluo_C) == 0x0007D0, "Wrong size on ABP_Kakaluo_C");
static_assert(offsetof(ABP_Kakaluo_C, UberGraphFrame_BP_Kakaluo_C) == 0x000778, "Member 'ABP_Kakaluo_C::UberGraphFrame_BP_Kakaluo_C' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, Bip001LThighTwist) == 0x000780, "Member 'ABP_Kakaluo_C::Bip001LThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, Bip001RThighTwist) == 0x000788, "Member 'ABP_Kakaluo_C::Bip001RThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, Bip001Spine2) == 0x000790, "Member 'ABP_Kakaluo_C::Bip001Spine2' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, WeaponCase0) == 0x000798, "Member 'ABP_Kakaluo_C::WeaponCase0' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, OtherCase1) == 0x0007A0, "Member 'ABP_Kakaluo_C::OtherCase1' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, OtherCase2) == 0x0007A8, "Member 'ABP_Kakaluo_C::OtherCase2' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, ___s) == 0x0007B0, "Member 'ABP_Kakaluo_C::___s' has a wrong offset!");
static_assert(offsetof(ABP_Kakaluo_C, NewVar_0) == 0x0007B8, "Member 'ABP_Kakaluo_C::NewVar_0' has a wrong offset!");

}

