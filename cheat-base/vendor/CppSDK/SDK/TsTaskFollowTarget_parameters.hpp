#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskFollowTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TsTaskFollowTarget.TsTaskFollowTarget_C.ExecuteUbergraph_TsTaskFollowTarget
// 0x0030 (0x0030 - 0x0000)
struct TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2690[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget) == 0x000008, "Wrong alignment on TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget");
static_assert(sizeof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget) == 0x000030, "Wrong size on TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, EntryPoint) == 0x000000, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, K2Node_Event_OwnerController) == 0x000008, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, K2Node_Event_ControlledPawn) == 0x000010, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, K2Node_Event_OwnerController_1) == 0x000020, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget, K2Node_Event_ControlledPawn_1) == 0x000028, "Member 'TsTaskFollowTarget_C_ExecuteUbergraph_TsTaskFollowTarget::K2Node_Event_ControlledPawn_1' has a wrong offset!");

// Function TsTaskFollowTarget.TsTaskFollowTarget_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct TsTaskFollowTarget_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsTaskFollowTarget_C_ReceiveTickAI) == 0x000008, "Wrong alignment on TsTaskFollowTarget_C_ReceiveTickAI");
static_assert(sizeof(TsTaskFollowTarget_C_ReceiveTickAI) == 0x000018, "Wrong size on TsTaskFollowTarget_C_ReceiveTickAI");
static_assert(offsetof(TsTaskFollowTarget_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'TsTaskFollowTarget_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'TsTaskFollowTarget_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'TsTaskFollowTarget_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function TsTaskFollowTarget.TsTaskFollowTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct TsTaskFollowTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsTaskFollowTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on TsTaskFollowTarget_C_ReceiveExecuteAI");
static_assert(sizeof(TsTaskFollowTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on TsTaskFollowTarget_C_ReceiveExecuteAI");
static_assert(offsetof(TsTaskFollowTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'TsTaskFollowTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'TsTaskFollowTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function TsTaskFollowTarget.TsTaskFollowTarget_C.GetPath
// 0x0010 (0x0010 - 0x0000)
struct TsTaskFollowTarget_C_GetPath final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(TsTaskFollowTarget_C_GetPath) == 0x000008, "Wrong alignment on TsTaskFollowTarget_C_GetPath");
static_assert(sizeof(TsTaskFollowTarget_C_GetPath) == 0x000010, "Wrong size on TsTaskFollowTarget_C_GetPath");
static_assert(offsetof(TsTaskFollowTarget_C_GetPath, OwnerController) == 0x000000, "Member 'TsTaskFollowTarget_C_GetPath::OwnerController' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_GetPath, ControlledPawn) == 0x000008, "Member 'TsTaskFollowTarget_C_GetPath::ControlledPawn' has a wrong offset!");

// Function TsTaskFollowTarget.TsTaskFollowTarget_C.DrawCube
// 0x0040 (0x0040 - 0x0000)
struct TsTaskFollowTarget_C_DrawCube final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Duration;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ColorValue;                                        // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsTaskFollowTarget_C_DrawCube) == 0x000010, "Wrong alignment on TsTaskFollowTarget_C_DrawCube");
static_assert(sizeof(TsTaskFollowTarget_C_DrawCube) == 0x000040, "Wrong size on TsTaskFollowTarget_C_DrawCube");
static_assert(offsetof(TsTaskFollowTarget_C_DrawCube, Transform) == 0x000000, "Member 'TsTaskFollowTarget_C_DrawCube::Transform' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_DrawCube, Duration) == 0x000030, "Member 'TsTaskFollowTarget_C_DrawCube::Duration' has a wrong offset!");
static_assert(offsetof(TsTaskFollowTarget_C_DrawCube, ColorValue) == 0x000034, "Member 'TsTaskFollowTarget_C_DrawCube::ColorValue' has a wrong offset!");

}

